!function(){"use strict";var n,e={653:function(){function n(n){return document.querySelector(n)}function e(n){return document.querySelectorAll(n)}var t=e(".num"),r=e(".opr"),i=n(".equal"),o=n(".del"),u=n(".reset"),c=(n(".screen"),n(".result-display")),a=n(".input-data-display"),l=null,s="",f="0";a.innerText=f,t.forEach((function(n){n.addEventListener("click",(function(){"."==n.innerText&&f.includes(".")||("0"==f?f=n.innerText:f+=n.innerText,"."==f[0]&&(f="0"+f),a.innerText=f)}))})),r.forEach((function(n){n.addEventListener("click",(function(){"0"!=f&&(""==s?(l=parseFloat(f),s=n.innerText):"+"==s?(l+=parseFloat(f),s=n.innerText):"-"==s?(l-=parseFloat(f),s=n.innerText):"*"==s?(l*=parseFloat(f),s=n.innerText):"/"==s&&(l/=parseFloat(f),s=n.innerText),f="0",a.innerText=f,c.innerText=l+" "+s)}))})),i.addEventListener("click",(function(){"+"==s?l+=parseFloat(f):"-"==s?l-=parseFloat(f):"*"==s?l*=parseFloat(f):"/"==s&&(l/=parseFloat(f)),f=String(l),a.innerText=l,l=null,c.innerText="",s=""})),o.addEventListener("click",(function(){"0"!=f&&(f=1==f.length?"0":f.slice(0,-1),a.innerText=f)})),u.addEventListener("click",(function(){l=null,f="0",s="",a.innerText=f,c.innerText=""}))}},t={};function r(n){var i=t[n];if(void 0!==i)return i.exports;var o=t[n]={exports:{}};return e[n](o,o.exports,r),o.exports}r.m=e,n=[],r.O=function(e,t,i,o){if(!t){var u=1/0;for(s=0;s<n.length;s++){t=n[s][0],i=n[s][1],o=n[s][2];for(var c=!0,a=0;a<t.length;a++)(!1&o||u>=o)&&Object.keys(r.O).every((function(n){return r.O[n](t[a])}))?t.splice(a--,1):(c=!1,o<u&&(u=o));if(c){n.splice(s--,1);var l=i();void 0!==l&&(e=l)}}return e}o=o||0;for(var s=n.length;s>0&&n[s-1][2]>o;s--)n[s]=n[s-1];n[s]=[t,i,o]},r.o=function(n,e){return Object.prototype.hasOwnProperty.call(n,e)},function(){var n={191:0,79:0};r.O.j=function(e){return 0===n[e]};var e=function(e,t){var i,o,u=t[0],c=t[1],a=t[2],l=0;if(u.some((function(e){return 0!==n[e]}))){for(i in c)r.o(c,i)&&(r.m[i]=c[i]);if(a)var s=a(r)}for(e&&e(t);l<u.length;l++)o=u[l],r.o(n,o)&&n[o]&&n[o][0](),n[o]=0;return r.O(s)},t=self.webpackChunkbittechdeveloper_github_io=self.webpackChunkbittechdeveloper_github_io||[];t.forEach(e.bind(null,0)),t.push=e.bind(null,t.push.bind(t))}();var i=r.O(void 0,[79],(function(){return r(653)}));i=r.O(i)}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,