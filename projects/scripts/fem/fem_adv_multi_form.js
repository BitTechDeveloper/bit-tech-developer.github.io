!function(){"use strict";var e,t={344:function(){function e(e){return document.querySelector(e)}function t(e){return document.querySelectorAll(e)}function n(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=document.createElement(e);return t&&(n.textContent=t),n}function a(e){return function(e){if(Array.isArray(e))return r(e)}(e)||function(e){if("undefined"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}(e)||function(e,t){if(e){if("string"==typeof e)return r(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?r(e,t):void 0}}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function r(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,a=new Array(t);n<t;n++)a[n]=e[n];return a}document.addEventListener("DOMContentLoaded",(function(){var r=t(".step"),c=t(".next"),o=t(".prev"),i=(t("[data-step]"),t(".nav-btn")),l=e("#toggle");l.checked=JSON.parse(localStorage.getItem("toggleInput"));var u=e("[name='name']");u.value=JSON.parse(localStorage.getItem("nameInput"));var s=e("[name='email']");s.value=JSON.parse(localStorage.getItem("emailInput"));var d=e("[name='phone']");d.value=JSON.parse(localStorage.getItem("phoneInput"));var f=a(t("input[name='plan']")),p=a(t(".plan-label")),v=(a(t(".plan-price")),e(".monthly-description")),m=e(".yearly-description"),h=a(t(".discount")),y=JSON.parse(localStorage.getItem("per"))||"mo",g=t("input[name='add-on']"),S=(a(t("[name='add-on']:checked")),e(".summary-addon-list")),E=JSON.parse(localStorage.getItem("duration"))||"monthly",k=JSON.parse(localStorage.getItem("currentStep"))||0;function x(e){r.forEach((function(t,n){n===e?t.classList.add("active"):t.classList.remove("active")}))}function I(){i.forEach((function(e,t){t===k?e.classList.add("active"):e.classList.remove("active"),k===r.length-1&&(i[i.length-1].style.backgroundColor="hsl(228, 100%, 84%)")}))}function O(){k>0&&(x(--k),I(),localStorage.setItem("currentStep",JSON.stringify(k)))}function L(){f.forEach((function(e){"archade"===e.id?(e.value="yearly"===E?90:9,e.nextElementSibling.textContent="$".concat(e.value,"/").concat(y)):"advance"===e.id?(e.value="yearly"===E?120:12,e.nextElementSibling.textContent="$".concat(e.value,"/").concat(y)):"pro"===e.id&&(e.value="yearly"===E?150:15,e.nextElementSibling.textContent="$".concat(e.value,"/").concat(y)),e.addEventListener("click",(function(){e.checked?e.parentElement.classList.add("selected-plan"):e.parentElement.classList.remove("selected-plan")}))})),"yearly"===E?(v.classList.remove("active"),m.classList.add("active"),h.forEach((function(e){e.textContent="2 months free"}))):(m.classList.remove("active"),v.classList.add("active"),h.forEach((function(e){e.textContent=""})))}function b(){g.forEach((function(e){"service"===e.id?(e.value="yearly"===E?10:1,e.parentElement.lastElementChild.textContent="$".concat(e.value,"/").concat(y)):("storage"===e.id||"profile"===e.id)&&(e.value="yearly"===E?20:2,e.parentElement.lastElementChild.textContent="$".concat(e.value,"/").concat(y))}))}function C(){var t=e(".summary-plan-title"),n=e(".summary-plan-price"),a=e(".summary-plan-change-link");f.forEach((function(e){if(e.checked){var a=e.parentElement.parentElement,r=a.querySelector(".plan-title"),c=a.querySelector(".plan-price");t.textContent="".concat(r.textContent," (").concat(E,")"),n.textContent="".concat(c.textContent)}})),a.addEventListener("click",(function(){x(k=1),localStorage.setItem("currentStep",JSON.stringify(k))}))}function J(){g.forEach((function(t){var a=t.parentElement,r=a.querySelector(".addon-title"),c=a.querySelector(".addon-price"),o=n("li"),i="".concat(t.id,"summary");o.id=i;var l=e("#".concat(i));o.classList.add("flex","item-center","justify-between"),o.innerHTML='\n                <span class="text-sm text-gray-700">'.concat(r.textContent,'</span>\n                <span class="text-sm">').concat(c.textContent,"</span>\n            "),t.checked&&!l?S.append(o):!t.checked&&l&&l.remove()}))}function N(){var e=0;return f.forEach((function(t){t.checked&&"archade"===t.id?e="yearly"===E?90:9:t.checked&&"advance"===t.id?e="yearly"===E?120:12:t.checked&&"pro"===t.id&&(e="yearly"===E?150:15)})),e}f.forEach((function(e,t){e.checked=JSON.parse(localStorage.getItem("planInput".concat(t)))})),g.forEach((function(e,t){e.checked=JSON.parse(localStorage.getItem("addonInput".concat(t)))}));var q=N();function w(){var e=0;return g.forEach((function(t){t.checked&&"service"===t.id?e+="yearly"===E?10:1:!t.checked||"storage"!==t.id&&"profile"!==t.id||(e+="yearly"===E?20:2)})),e}var A=w(),j=q+A;function $(){var t=e(".total-title");t.classList.add("text-sm");var n=e(".total-price");n.classList.add("text-lg","font-bold","text-[hsl(243,_100%,_62%)]"),t.textContent="Total (per ".concat(E.slice(0,-2),")"),n.textContent="$".concat(j,"/").concat(y)}x(k),I(),L(),b(),C(),J(),o.forEach((function(e){e.addEventListener("click",O)})),c.forEach((function(t){t.addEventListener("click",(function(){(function(){if(0===k&&(""===u.value||""===s.value||""===d.value)){var t=n("p");t.classList.add("absolute","text-red-700","-top-5","left-0"),t.id="invalid-message1";var a=e("#invalid-message1");t.textContent="All fields are required";var r=e("#step1").querySelector(".input-wrapper");return a||r.append(t),setTimeout((function(){t.remove()}),5e3),!1}if(1===k&&!f[0].checked&&!f[1].checked&&!f[2].checked){var c=n("p");c.classList.add("absolute","text-red-700","-top-5","left-0"),c.id="invalid-message2";var o=e("#invalid-message2");c.textContent="You didn't choose any plan";var i=e("#step2").querySelector(".input-wrapper");return o||i.append(c),setTimeout((function(){c.remove()}),5e3),!1}return!0})()&&(1===k&&f.forEach((function(e,t){localStorage.setItem("planInput".concat(t),JSON.stringify(!0===e.checked))})),2===k&&g.forEach((function(e,t){localStorage.setItem("addonInput".concat(t),JSON.stringify(!0===e.checked))})),k<r.length-1&&(x(++k),I(),localStorage.setItem("currentStep",JSON.stringify(k))))}))})),u.addEventListener("keyup",(function(){localStorage.setItem("nameInput",JSON.stringify(u.value))})),s.addEventListener("keyup",(function(){localStorage.setItem("emailInput",JSON.stringify(s.value))})),d.addEventListener("keyup",(function(){localStorage.setItem("phoneInput",JSON.stringify(d.value))})),f.forEach((function(e){e.addEventListener("click",(function(){C(),q=N(),j=q+A,$();var t=e.parentElement.parentElement;p.forEach((function(e){e.classList.remove("active")})),e.checked&&t.classList.add("active")}))})),g.forEach((function(e){e.addEventListener("click",(function(){C(),J(),A=w(),j=q+A,$()}))})),c.forEach((function(e){e.addEventListener("click",(function(){1===k&&(L(),C(),J())}))})),l.addEventListener("change",(function(e){for(E=toggle.checked?"yearly":"monthly",y="yearly"===E?"yr":"mo",L(),b(),C();S.firstElementChild;)S.removeChild(S.firstElementChild);J(),q=N(),A=w(),j=q+A,$(),localStorage.setItem("duration",JSON.stringify(E)),localStorage.setItem("per",JSON.stringify(y)),localStorage.setItem("toggleInput",JSON.stringify(!!l.checked))})),k===r.length-1&&localStorage.clear()}))}},n={};function a(e){var r=n[e];if(void 0!==r)return r.exports;var c=n[e]={exports:{}};return t[e](c,c.exports,a),c.exports}a.m=t,e=[],a.O=function(t,n,r,c){if(!n){var o=1/0;for(s=0;s<e.length;s++){n=e[s][0],r=e[s][1],c=e[s][2];for(var i=!0,l=0;l<n.length;l++)(!1&c||o>=c)&&Object.keys(a.O).every((function(e){return a.O[e](n[l])}))?n.splice(l--,1):(i=!1,c<o&&(o=c));if(i){e.splice(s--,1);var u=r();void 0!==u&&(t=u)}}return t}c=c||0;for(var s=e.length;s>0&&e[s-1][2]>c;s--)e[s]=e[s-1];e[s]=[n,r,c]},a.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},function(){var e={47:0,79:0};a.O.j=function(t){return 0===e[t]};var t=function(t,n){var r,c,o=n[0],i=n[1],l=n[2],u=0;if(o.some((function(t){return 0!==e[t]}))){for(r in i)a.o(i,r)&&(a.m[r]=i[r]);if(l)var s=l(a)}for(t&&t(n);u<o.length;u++)c=o[u],a.o(e,c)&&e[c]&&e[c][0](),e[c]=0;return a.O(s)},n=self.webpackChunkbittechdeveloper_github_io=self.webpackChunkbittechdeveloper_github_io||[];n.forEach(t.bind(null,0)),n.push=t.bind(null,n.push.bind(n))}();var r=a.O(void 0,[79],(function(){return a(344)}));r=a.O(r)}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,