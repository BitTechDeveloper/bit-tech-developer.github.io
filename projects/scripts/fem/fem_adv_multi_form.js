!function(){"use strict";var e,t={344:function(){function e(e){return document.querySelector(e)}function t(e){return document.querySelectorAll(e)}function n(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=document.createElement(e);return t&&(n.textContent=t),n}function a(e){return function(e){if(Array.isArray(e))return r(e)}(e)||function(e){if("undefined"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}(e)||function(e,t){if(e){if("string"==typeof e)return r(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?r(e,t):void 0}}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function r(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,a=new Array(t);n<t;n++)a[n]=e[n];return a}document.addEventListener("DOMContentLoaded",(function(){var r=t(".step"),c=t(".next"),o=t(".prev"),i=(t("[data-step]"),t(".nav-btn")),l=e("#toggle");l.checked=JSON.parse(localStorage.getItem("toggleInput"));var s=e("[name='name']");s.value=JSON.parse(localStorage.getItem("nameInput"));var u=e("[name='email']");u.value=JSON.parse(localStorage.getItem("emailInput"));var d=e("[name='phone']");d.value=JSON.parse(localStorage.getItem("phoneInput"));var f=a(t("input[name='plan']")),p=a(t(".plan-label")),v=(a(t(".plan-price")),e(".monthly-description")),m=e(".yearly-description"),y=a(t(".discount")),h=JSON.parse(localStorage.getItem("per"))||"mo",g=t("input[name='add-on']"),S=(a(t("[name='add-on']:checked")),e(".summary-addon-list")),E=JSON.parse(localStorage.getItem("duration"))||"monthly",k=JSON.parse(localStorage.getItem("currentStep"))||0;function x(e){r.forEach((function(t,n){n===e?t.classList.add("active"):t.classList.remove("active")}))}function I(){i.forEach((function(e,t){t===k?e.classList.add("active"):e.classList.remove("active"),k===r.length-1&&(i[i.length-1].style.backgroundColor="hsl(228, 100%, 84%)")}))}function O(){k>0&&(x(--k),I(),localStorage.setItem("currentStep",JSON.stringify(k)))}function L(){f.forEach((function(e){"archade"===e.id?(e.value="yearly"===E?90:9,e.nextElementSibling.textContent="$".concat(e.value,"/").concat(h)):"advance"===e.id?(e.value="yearly"===E?120:12,e.nextElementSibling.textContent="$".concat(e.value,"/").concat(h)):"pro"===e.id&&(e.value="yearly"===E?150:15,e.nextElementSibling.textContent="$".concat(e.value,"/").concat(h)),e.addEventListener("click",(function(){e.checked?e.parentElement.classList.add("selected-plan"):e.parentElement.classList.remove("selected-plan")}))})),"yearly"===E?(v.classList.remove("active"),m.classList.add("active"),y.forEach((function(e){e.textContent="2 months free"}))):(m.classList.remove("active"),v.classList.add("active"),y.forEach((function(e){e.textContent=""})))}function C(){g.forEach((function(e){"service"===e.id?(e.value="yearly"===E?10:1,e.parentElement.lastElementChild.textContent="$".concat(e.value,"/").concat(h)):("storage"===e.id||"profile"===e.id)&&(e.value="yearly"===E?20:2,e.parentElement.lastElementChild.textContent="$".concat(e.value,"/").concat(h))}))}function b(){var t=e(".summary-plan-title"),n=e(".summary-plan-price"),a=e(".summary-plan-change-link");f.forEach((function(e){if(e.checked){var a=e.parentElement.parentElement,r=a.querySelector(".plan-title"),c=a.querySelector(".plan-price");t.textContent="".concat(r.textContent," (").concat(E,")"),n.textContent="".concat(c.textContent)}})),a.addEventListener("click",(function(){x(k=1),localStorage.setItem("currentStep",JSON.stringify(k))}))}function J(){g.forEach((function(t){var a=t.parentElement,r=a.querySelector(".addon-title"),c=a.querySelector(".addon-price"),o=n("li"),i="".concat(t.id,"summary");o.id=i;var l=e("#".concat(i));o.classList.add("flex","item-center","justify-between"),o.innerHTML='\n                <span class="text-sm text-gray-700">'.concat(r.textContent,'</span>\n                <span class="text-sm">').concat(c.textContent,"</span>\n            "),t.checked&&!l?S.append(o):!t.checked&&l&&l.remove()}))}function N(){var e=0;return f.forEach((function(t){t.checked&&"archade"===t.id?e="yearly"===E?90:9:t.checked&&"advance"===t.id?e="yearly"===E?120:12:t.checked&&"pro"===t.id&&(e="yearly"===E?150:15)})),e}f.forEach((function(e,t){e.checked=JSON.parse(localStorage.getItem("planInput".concat(t)))})),g.forEach((function(e,t){e.checked=JSON.parse(localStorage.getItem("addonInput".concat(t)))}));var j=N();function q(){var e=0;return g.forEach((function(t){t.checked&&"service"===t.id?e+="yearly"===E?10:1:!t.checked||"storage"!==t.id&&"profile"!==t.id||(e+="yearly"===E?20:2)})),e}var w=q(),A=j+w;function $(){var t=e(".total-title");t.classList.add("text-sm");var n=e(".total-price");n.classList.add("text-lg","font-bold","text-[hsl(243,_100%,_62%)]"),t.textContent="Total (per ".concat(E.slice(0,-2),")"),n.textContent="$".concat(A,"/").concat(h)}x(k),I(),L(),C(),b(),J(),o.forEach((function(e){e.addEventListener("click",O)})),c.forEach((function(t){t.addEventListener("click",(function(){(function(){if(0===k&&(""===s.value||""===u.value||""===d.value)){var t=n("p");t.classList.add("absolute","text-red-700","-top-5","left-0"),t.id="invalid-message1";var a=e("#invalid-message1");t.textContent="All fields are required";var r=e("#step1").querySelector(".input-wrapper");return a||r.append(t),setTimeout((function(){t.remove()}),5e3),!1}if(1===k&&!f[0].checked&&!f[1].checked&&!f[2].checked){var c=n("p");c.classList.add("absolute","text-red-700","-top-5","left-0"),c.id="invalid-message2";var o=e("#invalid-message2");c.textContent="You didn't choose any plan";var i=e("#step2").querySelector(".input-wrapper");return o||i.append(c),setTimeout((function(){c.remove()}),5e3),!1}return!0})()&&(1===k&&f.forEach((function(e,t){localStorage.setItem("planInput".concat(t),JSON.stringify(!0===e.checked))})),2===k&&g.forEach((function(e,t){localStorage.setItem("addonInput".concat(t),JSON.stringify(!0===e.checked))})),k<r.length-1&&(x(++k),I(),localStorage.setItem("currentStep",JSON.stringify(k))))}))})),s.addEventListener("keyup",(function(){localStorage.setItem("nameInput",JSON.stringify(s.value))})),u.addEventListener("keyup",(function(){localStorage.setItem("emailInput",JSON.stringify(u.value))})),d.addEventListener("keyup",(function(){localStorage.setItem("phoneInput",JSON.stringify(d.value))})),f.forEach((function(e){e.addEventListener("click",(function(){b(),j=N(),A=j+w,$();var t=e.parentElement.parentElement;p.forEach((function(e){e.classList.remove("active")})),e.checked&&t.classList.add("active")}))})),g.forEach((function(e){e.addEventListener("click",(function(){b(),J(),w=q(),A=j+w,$()}))})),c.forEach((function(e){e.addEventListener("click",(function(){1===k&&(L(),b(),J())}))})),l.addEventListener("change",(function(e){for(E=toggle.checked?"yearly":"monthly",h="yearly"===E?"yr":"mo",L(),C(),b();S.firstElementChild;)S.removeChild(S.firstElementChild);J(),j=N(),w=q(),A=j+w,$(),localStorage.setItem("duration",JSON.stringify(E)),localStorage.setItem("per",JSON.stringify(h)),localStorage.setItem("toggleInput",JSON.stringify(!!l.checked))})),k===r.length-1&&localStorage.clear()}))}},n={};function a(e){var r=n[e];if(void 0!==r)return r.exports;var c=n[e]={exports:{}};return t[e](c,c.exports,a),c.exports}a.m=t,e=[],a.O=function(t,n,r,c){if(!n){var o=1/0;for(u=0;u<e.length;u++){n=e[u][0],r=e[u][1],c=e[u][2];for(var i=!0,l=0;l<n.length;l++)(!1&c||o>=c)&&Object.keys(a.O).every((function(e){return a.O[e](n[l])}))?n.splice(l--,1):(i=!1,c<o&&(o=c));if(i){e.splice(u--,1);var s=r();void 0!==s&&(t=s)}}return t}c=c||0;for(var u=e.length;u>0&&e[u-1][2]>c;u--)e[u]=e[u-1];e[u]=[n,r,c]},a.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},function(){var e={47:0,79:0};a.O.j=function(t){return 0===e[t]};var t=function(t,n){var r,c,o=n[0],i=n[1],l=n[2],s=0;if(o.some((function(t){return 0!==e[t]}))){for(r in i)a.o(i,r)&&(a.m[r]=i[r]);if(l)var u=l(a)}for(t&&t(n);s<o.length;s++)c=o[s],a.o(e,c)&&e[c]&&e[c][0](),e[c]=0;return a.O(u)},n=self.webpackChunksample_projects=self.webpackChunksample_projects||[];n.forEach(t.bind(null,0)),n.push=t.bind(null,n.push.bind(n))}();var r=a.O(void 0,[79],(function(){return a(344)}));r=a.O(r)}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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LEVBQUVNLEVBQWlCQyxJQUFZRCxFQUFnQkMsSUFDckVELEVBQWdCQyxHQUFTLEtBRTFCRCxFQUFnQkMsR0FBVyxFQUU1QixPQUFPOUIsRUFBb0JPLEVBQUVDLEVBQzlCLEVBRUk2QixFQUFxQkMsS0FBa0MsNEJBQUlBLEtBQWtDLDZCQUFLLEdBQ3RHRCxFQUFtQnRHLFFBQVFnRyxFQUFxQlEsS0FBSyxLQUFNLElBQzNERixFQUFtQkcsS0FBT1QsRUFBcUJRLEtBQUssS0FBTUYsRUFBbUJHLEtBQUtELEtBQUtGLEcsSUNoRHZGLElBQUlJLEVBQXNCekMsRUFBb0JPLE9BQUV6RyxFQUFXLENBQUMsS0FBSyxXQUFhLE9BQU9rRyxFQUFvQixJQUFNLElBQy9HeUMsRUFBc0J6QyxFQUFvQk8sRUFBRWtDLEUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zYW1wbGUtcHJvamVjdHMvd2VicGFjay9ydW50aW1lL2NodW5rIGxvYWRlZCIsIndlYnBhY2s6Ly9zYW1wbGUtcHJvamVjdHMvLi9zcmMvc2NyaXB0cy9saWJqcy9mdW5jdGlvbnMuanMiLCJ3ZWJwYWNrOi8vc2FtcGxlLXByb2plY3RzLy4vc3JjL3NjcmlwdHMvZmVtL2ZlbS1hZHYtbXVsdGktZm9ybS5qcyIsIndlYnBhY2s6Ly9zYW1wbGUtcHJvamVjdHMvd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vc2FtcGxlLXByb2plY3RzL3dlYnBhY2svcnVudGltZS9oYXNPd25Qcm9wZXJ0eSBzaG9ydGhhbmQiLCJ3ZWJwYWNrOi8vc2FtcGxlLXByb2plY3RzL3dlYnBhY2svcnVudGltZS9qc29ucCBjaHVuayBsb2FkaW5nIiwid2VicGFjazovL3NhbXBsZS1wcm9qZWN0cy93ZWJwYWNrL3N0YXJ0dXAiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIGRlZmVycmVkID0gW107XG5fX3dlYnBhY2tfcmVxdWlyZV9fLk8gPSBmdW5jdGlvbihyZXN1bHQsIGNodW5rSWRzLCBmbiwgcHJpb3JpdHkpIHtcblx0aWYoY2h1bmtJZHMpIHtcblx0XHRwcmlvcml0eSA9IHByaW9yaXR5IHx8IDA7XG5cdFx0Zm9yKHZhciBpID0gZGVmZXJyZWQubGVuZ3RoOyBpID4gMCAmJiBkZWZlcnJlZFtpIC0gMV1bMl0gPiBwcmlvcml0eTsgaS0tKSBkZWZlcnJlZFtpXSA9IGRlZmVycmVkW2kgLSAxXTtcblx0XHRkZWZlcnJlZFtpXSA9IFtjaHVua0lkcywgZm4sIHByaW9yaXR5XTtcblx0XHRyZXR1cm47XG5cdH1cblx0dmFyIG5vdEZ1bGZpbGxlZCA9IEluZmluaXR5O1xuXHRmb3IgKHZhciBpID0gMDsgaSA8IGRlZmVycmVkLmxlbmd0aDsgaSsrKSB7XG5cdFx0dmFyIGNodW5rSWRzID0gZGVmZXJyZWRbaV1bMF07XG5cdFx0dmFyIGZuID0gZGVmZXJyZWRbaV1bMV07XG5cdFx0dmFyIHByaW9yaXR5ID0gZGVmZXJyZWRbaV1bMl07XG5cdFx0dmFyIGZ1bGZpbGxlZCA9IHRydWU7XG5cdFx0Zm9yICh2YXIgaiA9IDA7IGogPCBjaHVua0lkcy5sZW5ndGg7IGorKykge1xuXHRcdFx0aWYgKChwcmlvcml0eSAmIDEgPT09IDAgfHwgbm90RnVsZmlsbGVkID49IHByaW9yaXR5KSAmJiBPYmplY3Qua2V5cyhfX3dlYnBhY2tfcmVxdWlyZV9fLk8pLmV2ZXJ5KGZ1bmN0aW9uKGtleSkgeyByZXR1cm4gX193ZWJwYWNrX3JlcXVpcmVfXy5PW2tleV0oY2h1bmtJZHNbal0pOyB9KSkge1xuXHRcdFx0XHRjaHVua0lkcy5zcGxpY2Uoai0tLCAxKTtcblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdGZ1bGZpbGxlZCA9IGZhbHNlO1xuXHRcdFx0XHRpZihwcmlvcml0eSA8IG5vdEZ1bGZpbGxlZCkgbm90RnVsZmlsbGVkID0gcHJpb3JpdHk7XG5cdFx0XHR9XG5cdFx0fVxuXHRcdGlmKGZ1bGZpbGxlZCkge1xuXHRcdFx0ZGVmZXJyZWQuc3BsaWNlKGktLSwgMSlcblx0XHRcdHZhciByID0gZm4oKTtcblx0XHRcdGlmIChyICE9PSB1bmRlZmluZWQpIHJlc3VsdCA9IHI7XG5cdFx0fVxuXHR9XG5cdHJldHVybiByZXN1bHQ7XG59OyIsImV4cG9ydCBmdW5jdGlvbiBzZWxlY3QoZWxlbWVudCkge1xyXG4gICAgY29uc3Qgc2VsZWN0ZWRFbGVtZW50ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihlbGVtZW50KTtcclxuICAgIHJldHVybiBzZWxlY3RlZEVsZW1lbnQ7XHJcbn1cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBzZWxlY3RBbGwoZWxlbWVudHMpIHtcclxuICAgIGNvbnN0IHNlbGVjdGVkRWxlbWVudHMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKGVsZW1lbnRzKTtcclxuICAgIHJldHVybiBzZWxlY3RlZEVsZW1lbnRzO1xyXG59XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlKGVsZW1lbnQsIHRleHQgPSBudWxsKSB7XHJcbiAgICBjb25zdCBjcmVhdGVkRWxlbWVudCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoZWxlbWVudCk7XHJcbiAgICBpZiAodGV4dCkge1xyXG4gICAgICAgIGNyZWF0ZWRFbGVtZW50LnRleHRDb250ZW50ID0gdGV4dDtcclxuICAgIH1cclxuICAgIHJldHVybiBjcmVhdGVkRWxlbWVudDtcclxufVxyXG4iLCIvLyBpbXBvcnQgeyBJbnB1dCB9IGZyb20gXCJwb3N0Y3NzXCI7XHJcbmltcG9ydCBcIi4uLy4uL3N0eWxlcy9tYWluLmNzc1wiO1xyXG5pbXBvcnQgKiBhcyBmdW5jIGZyb20gXCIuLi9saWJqcy9mdW5jdGlvbnNcIjtcclxuXHJcbmRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJET01Db250ZW50TG9hZGVkXCIsIGZ1bmN0aW9uICgpIHtcclxuICAgIC8vIFZhcmlhYmxlczogR2VuZXJhbFxyXG4gICAgY29uc3Qgc3RlcHMgPSBmdW5jLnNlbGVjdEFsbChcIi5zdGVwXCIpO1xyXG4gICAgY29uc3QgbmV4dEJ0bnMgPSBmdW5jLnNlbGVjdEFsbChcIi5uZXh0XCIpO1xyXG4gICAgY29uc3QgcHJldkJ0bnMgPSBmdW5jLnNlbGVjdEFsbChcIi5wcmV2XCIpO1xyXG4gICAgY29uc3Qgc3RlcExpbmtzID0gZnVuYy5zZWxlY3RBbGwoXCJbZGF0YS1zdGVwXVwiKTtcclxuICAgIGNvbnN0IG5hdkJ0bnMgPSBmdW5jLnNlbGVjdEFsbChcIi5uYXYtYnRuXCIpO1xyXG4gICAgY29uc3QgdG9nZ2xlSW5wdXQgPSBmdW5jLnNlbGVjdChcIiN0b2dnbGVcIik7XHJcbiAgICB0b2dnbGVJbnB1dC5jaGVja2VkID0gSlNPTi5wYXJzZShsb2NhbFN0b3JhZ2UuZ2V0SXRlbShcInRvZ2dsZUlucHV0XCIpKTtcclxuICAgIC8vIFZhcmlhYmxlczogaW5mbyBTdGVwIDFcclxuICAgIGNvbnN0IG5hbWVJbnB1dCA9IGZ1bmMuc2VsZWN0KFwiW25hbWU9J25hbWUnXVwiKTtcclxuICAgIG5hbWVJbnB1dC52YWx1ZSA9IEpTT04ucGFyc2UobG9jYWxTdG9yYWdlLmdldEl0ZW0oXCJuYW1lSW5wdXRcIikpO1xyXG4gICAgY29uc3QgZW1haWxJbnB1dCA9IGZ1bmMuc2VsZWN0KFwiW25hbWU9J2VtYWlsJ11cIik7XHJcbiAgICBlbWFpbElucHV0LnZhbHVlID0gSlNPTi5wYXJzZShsb2NhbFN0b3JhZ2UuZ2V0SXRlbShcImVtYWlsSW5wdXRcIikpO1xyXG4gICAgY29uc3QgcGhvbmVJbnB1dCA9IGZ1bmMuc2VsZWN0KFwiW25hbWU9J3Bob25lJ11cIik7XHJcbiAgICBwaG9uZUlucHV0LnZhbHVlID0gSlNPTi5wYXJzZShsb2NhbFN0b3JhZ2UuZ2V0SXRlbShcInBob25lSW5wdXRcIikpO1xyXG4gICAgLy8gVmFyaWFibGVzOiBQbGFuIFN0ZXAgMlxyXG4gICAgY29uc3QgcGxhbklucHV0cyA9IFsuLi5mdW5jLnNlbGVjdEFsbChcImlucHV0W25hbWU9J3BsYW4nXVwiKV07XHJcbiAgICBjb25zdCBwbGFuTGFiZWxzID0gWy4uLmZ1bmMuc2VsZWN0QWxsKFwiLnBsYW4tbGFiZWxcIildO1xyXG4gICAgY29uc3QgcGxhblByaWNlcyA9IFsuLi5mdW5jLnNlbGVjdEFsbChcIi5wbGFuLXByaWNlXCIpXTtcclxuICAgIGNvbnN0IG1vbnRobHlEZXNjcmlwdGlvbiA9IGZ1bmMuc2VsZWN0KFwiLm1vbnRobHktZGVzY3JpcHRpb25cIik7XHJcbiAgICBjb25zdCB5ZWFybHlEZXNjcmlwdGlvbiA9IGZ1bmMuc2VsZWN0KFwiLnllYXJseS1kZXNjcmlwdGlvblwiKTtcclxuICAgIGNvbnN0IGRpc2NvdW50cyA9IFsuLi5mdW5jLnNlbGVjdEFsbChcIi5kaXNjb3VudFwiKV07XHJcblxyXG4gICAgbGV0IHBlciA9IEpTT04ucGFyc2UobG9jYWxTdG9yYWdlLmdldEl0ZW0oXCJwZXJcIikpIHx8IFwibW9cIjtcclxuXHJcbiAgICAvLyBWYXJpYWJsZXM6IEFkZC1vbiBTdGVwIDNcclxuICAgIGNvbnN0IGFkZG9uSW5wdXRzID0gZnVuYy5zZWxlY3RBbGwoXCJpbnB1dFtuYW1lPSdhZGQtb24nXVwiKTtcclxuICAgIGNvbnN0IGNoZWNrZWRBZGRvbnMgPSBbLi4uZnVuYy5zZWxlY3RBbGwoXCJbbmFtZT0nYWRkLW9uJ106Y2hlY2tlZFwiKV07XHJcblxyXG4gICAgLy8gVmFyaWFibGVzOiBTdW1tYXJ5IFN0ZXAgNFxyXG4gICAgY29uc3Qgc3VtbWFyeUFkZG9uTGlzdCA9IGZ1bmMuc2VsZWN0KFwiLnN1bW1hcnktYWRkb24tbGlzdFwiKTtcclxuXHJcbiAgICBsZXQgZHVyYXRpb24gPSBKU09OLnBhcnNlKGxvY2FsU3RvcmFnZS5nZXRJdGVtKFwiZHVyYXRpb25cIikpIHx8IFwibW9udGhseVwiO1xyXG4gICAgbGV0IGN1cnJlbnRTdGVwID0gSlNPTi5wYXJzZShsb2NhbFN0b3JhZ2UuZ2V0SXRlbShcImN1cnJlbnRTdGVwXCIpKSB8fCAwO1xyXG5cclxuICAgIGdldExvY2FsU3RvcmFnZSgpO1xyXG5cclxuICAgIC8vIEZ1bmN0aW9uOiBTaG93IHN0ZXBcclxuICAgIGZ1bmN0aW9uIHNob3dTdGVwKHN0ZXBJbmRleCkge1xyXG4gICAgICAgIHN0ZXBzLmZvckVhY2goKHN0ZXAsIGluZGV4KSA9PiB7XHJcbiAgICAgICAgICAgIGlmIChpbmRleCA9PT0gc3RlcEluZGV4KSB7XHJcbiAgICAgICAgICAgICAgICBzdGVwLmNsYXNzTGlzdC5hZGQoXCJhY3RpdmVcIik7XHJcbiAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICBzdGVwLmNsYXNzTGlzdC5yZW1vdmUoXCJhY3RpdmVcIik7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuICAgIH1cclxuXHJcbiAgICAvLyBGdW5jdGlvbjogVXBkYXRlIE5hdiBCdXR0b25zXHJcbiAgICBmdW5jdGlvbiB1cGRhdGVOYXZCdG5zKCkge1xyXG4gICAgICAgIG5hdkJ0bnMuZm9yRWFjaCgobmF2QnRuLCBpbmRleCkgPT4ge1xyXG4gICAgICAgICAgICBpZiAoaW5kZXggPT09IGN1cnJlbnRTdGVwKSB7XHJcbiAgICAgICAgICAgICAgICBuYXZCdG4uY2xhc3NMaXN0LmFkZChcImFjdGl2ZVwiKTtcclxuICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgIG5hdkJ0bi5jbGFzc0xpc3QucmVtb3ZlKFwiYWN0aXZlXCIpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGlmIChjdXJyZW50U3RlcCA9PT0gc3RlcHMubGVuZ3RoIC0gMSkge1xyXG4gICAgICAgICAgICAgICAgbmF2QnRuc1tuYXZCdG5zLmxlbmd0aCAtIDFdLnN0eWxlLmJhY2tncm91bmRDb2xvciA9XHJcbiAgICAgICAgICAgICAgICAgICAgXCJoc2woMjI4LCAxMDAlLCA4NCUpXCI7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuICAgIH1cclxuXHJcbiAgICAvLyBGdW5jdGlvbjogTmV4dCBTdGVwXHJcbiAgICBmdW5jdGlvbiBnb1RvTmV4dFN0ZXAoKSB7XHJcbiAgICAgICAgaWYgKGN1cnJlbnRTdGVwIDwgc3RlcHMubGVuZ3RoIC0gMSkge1xyXG4gICAgICAgICAgICBjdXJyZW50U3RlcCsrO1xyXG4gICAgICAgICAgICBzaG93U3RlcChjdXJyZW50U3RlcCk7XHJcbiAgICAgICAgICAgIHVwZGF0ZU5hdkJ0bnMoKTtcclxuICAgICAgICAgICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oXCJjdXJyZW50U3RlcFwiLCBKU09OLnN0cmluZ2lmeShjdXJyZW50U3RlcCkpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAvLyBGdW5jdGlvbjogUHJldmlvdXMgU3RlcFxyXG4gICAgZnVuY3Rpb24gZ29Ub1ByZXZpb3VzU3RlcCgpIHtcclxuICAgICAgICBpZiAoY3VycmVudFN0ZXAgPiAwKSB7XHJcbiAgICAgICAgICAgIGN1cnJlbnRTdGVwLS07XHJcbiAgICAgICAgICAgIHNob3dTdGVwKGN1cnJlbnRTdGVwKTtcclxuICAgICAgICAgICAgdXBkYXRlTmF2QnRucygpO1xyXG4gICAgICAgICAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbShcImN1cnJlbnRTdGVwXCIsIEpTT04uc3RyaW5naWZ5KGN1cnJlbnRTdGVwKSk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIC8vIEZ1bmN0aW9uOiBVcGRhdGUgUGxhbiBTdGVwIDJcclxuICAgIGZ1bmN0aW9uIHVwZGF0ZVBsYW5TdGVwKCkge1xyXG4gICAgICAgIHBsYW5JbnB1dHMuZm9yRWFjaCgocGxhbklucHV0KSA9PiB7XHJcbiAgICAgICAgICAgIGlmIChwbGFuSW5wdXQuaWQgPT09IFwiYXJjaGFkZVwiKSB7XHJcbiAgICAgICAgICAgICAgICBwbGFuSW5wdXQudmFsdWUgPSBkdXJhdGlvbiA9PT0gXCJ5ZWFybHlcIiA/IDkwIDogOTtcclxuICAgICAgICAgICAgICAgIHBsYW5JbnB1dC5uZXh0RWxlbWVudFNpYmxpbmcudGV4dENvbnRlbnQgPSBgJCR7cGxhbklucHV0LnZhbHVlfS8ke3Blcn1gO1xyXG4gICAgICAgICAgICB9IGVsc2UgaWYgKHBsYW5JbnB1dC5pZCA9PT0gXCJhZHZhbmNlXCIpIHtcclxuICAgICAgICAgICAgICAgIHBsYW5JbnB1dC52YWx1ZSA9IGR1cmF0aW9uID09PSBcInllYXJseVwiID8gMTIwIDogMTI7XHJcbiAgICAgICAgICAgICAgICBwbGFuSW5wdXQubmV4dEVsZW1lbnRTaWJsaW5nLnRleHRDb250ZW50ID0gYCQke3BsYW5JbnB1dC52YWx1ZX0vJHtwZXJ9YDtcclxuICAgICAgICAgICAgfSBlbHNlIGlmIChwbGFuSW5wdXQuaWQgPT09IFwicHJvXCIpIHtcclxuICAgICAgICAgICAgICAgIHBsYW5JbnB1dC52YWx1ZSA9IGR1cmF0aW9uID09PSBcInllYXJseVwiID8gMTUwIDogMTU7XHJcbiAgICAgICAgICAgICAgICBwbGFuSW5wdXQubmV4dEVsZW1lbnRTaWJsaW5nLnRleHRDb250ZW50ID0gYCQke3BsYW5JbnB1dC52YWx1ZX0vJHtwZXJ9YDtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBwbGFuSW5wdXQuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcclxuICAgICAgICAgICAgICAgIGlmIChwbGFuSW5wdXQuY2hlY2tlZCkge1xyXG4gICAgICAgICAgICAgICAgICAgIHBsYW5JbnB1dC5wYXJlbnRFbGVtZW50LmNsYXNzTGlzdC5hZGQoXCJzZWxlY3RlZC1wbGFuXCIpO1xyXG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICBwbGFuSW5wdXQucGFyZW50RWxlbWVudC5jbGFzc0xpc3QucmVtb3ZlKFwic2VsZWN0ZWQtcGxhblwiKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgfSk7XHJcblxyXG4gICAgICAgIGlmIChkdXJhdGlvbiA9PT0gXCJ5ZWFybHlcIikge1xyXG4gICAgICAgICAgICBtb250aGx5RGVzY3JpcHRpb24uY2xhc3NMaXN0LnJlbW92ZShcImFjdGl2ZVwiKTtcclxuICAgICAgICAgICAgeWVhcmx5RGVzY3JpcHRpb24uY2xhc3NMaXN0LmFkZChcImFjdGl2ZVwiKTtcclxuICAgICAgICAgICAgZGlzY291bnRzLmZvckVhY2goKGRpc2NvdW50KSA9PiB7XHJcbiAgICAgICAgICAgICAgICBkaXNjb3VudC50ZXh0Q29udGVudCA9IFwiMiBtb250aHMgZnJlZVwiO1xyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICB5ZWFybHlEZXNjcmlwdGlvbi5jbGFzc0xpc3QucmVtb3ZlKFwiYWN0aXZlXCIpO1xyXG4gICAgICAgICAgICBtb250aGx5RGVzY3JpcHRpb24uY2xhc3NMaXN0LmFkZChcImFjdGl2ZVwiKTtcclxuICAgICAgICAgICAgZGlzY291bnRzLmZvckVhY2goKGRpc2NvdW50KSA9PiB7XHJcbiAgICAgICAgICAgICAgICBkaXNjb3VudC50ZXh0Q29udGVudCA9IFwiXCI7XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAvLyBGdW5jdGlvbjogVXBkYXRlIEFkZG9uIFN0ZXAgM1xyXG4gICAgZnVuY3Rpb24gdXBkYXRlQWRkb25TdGVwKCkge1xyXG4gICAgICAgIGFkZG9uSW5wdXRzLmZvckVhY2goKGFkZG9uSW5wdXQpID0+IHtcclxuICAgICAgICAgICAgaWYgKGFkZG9uSW5wdXQuaWQgPT09IFwic2VydmljZVwiKSB7XHJcbiAgICAgICAgICAgICAgICBhZGRvbklucHV0LnZhbHVlID0gZHVyYXRpb24gPT09IFwieWVhcmx5XCIgPyAxMCA6IDE7XHJcbiAgICAgICAgICAgICAgICBhZGRvbklucHV0LnBhcmVudEVsZW1lbnQubGFzdEVsZW1lbnRDaGlsZC50ZXh0Q29udGVudCA9IGAkJHthZGRvbklucHV0LnZhbHVlfS8ke3Blcn1gO1xyXG4gICAgICAgICAgICB9IGVsc2UgaWYgKGFkZG9uSW5wdXQuaWQgPT09IFwic3RvcmFnZVwiKSB7XHJcbiAgICAgICAgICAgICAgICBhZGRvbklucHV0LnZhbHVlID0gZHVyYXRpb24gPT09IFwieWVhcmx5XCIgPyAyMCA6IDI7XHJcbiAgICAgICAgICAgICAgICBhZGRvbklucHV0LnBhcmVudEVsZW1lbnQubGFzdEVsZW1lbnRDaGlsZC50ZXh0Q29udGVudCA9IGAkJHthZGRvbklucHV0LnZhbHVlfS8ke3Blcn1gO1xyXG4gICAgICAgICAgICB9IGVsc2UgaWYgKGFkZG9uSW5wdXQuaWQgPT09IFwicHJvZmlsZVwiKSB7XHJcbiAgICAgICAgICAgICAgICBhZGRvbklucHV0LnZhbHVlID0gZHVyYXRpb24gPT09IFwieWVhcmx5XCIgPyAyMCA6IDI7XHJcbiAgICAgICAgICAgICAgICBhZGRvbklucHV0LnBhcmVudEVsZW1lbnQubGFzdEVsZW1lbnRDaGlsZC50ZXh0Q29udGVudCA9IGAkJHthZGRvbklucHV0LnZhbHVlfS8ke3Blcn1gO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcblxyXG4gICAgLy8gRnVuY3Rpb246IFVwZGF0ZSBQbGFuIFN1bW1hcnkgU3RlcCA0XHJcbiAgICBmdW5jdGlvbiB1cGRhdGVQbGFuU3VtbWFyeSgpIHtcclxuICAgICAgICBjb25zdCBzdW1tYXJ5UGxhblRpdGxlID0gZnVuYy5zZWxlY3QoXCIuc3VtbWFyeS1wbGFuLXRpdGxlXCIpO1xyXG4gICAgICAgIGNvbnN0IHN1bW1hcnlQbGFuUHJpY2UgPSBmdW5jLnNlbGVjdChcIi5zdW1tYXJ5LXBsYW4tcHJpY2VcIik7XHJcbiAgICAgICAgY29uc3Qgc3VtbWFyeVBsYW5DaGFuZ2VMaW5rID0gZnVuYy5zZWxlY3QoXCIuc3VtbWFyeS1wbGFuLWNoYW5nZS1saW5rXCIpO1xyXG5cclxuICAgICAgICAvLyBQbGFuIFN1bW1hcnlcclxuICAgICAgICBwbGFuSW5wdXRzLmZvckVhY2goKHBsYW5JbnB1dCkgPT4ge1xyXG4gICAgICAgICAgICBpZiAocGxhbklucHV0LmNoZWNrZWQpIHtcclxuICAgICAgICAgICAgICAgIGNvbnN0IHNlbGVjdGVkUGxhbiA9IHBsYW5JbnB1dC5wYXJlbnRFbGVtZW50LnBhcmVudEVsZW1lbnQ7XHJcbiAgICAgICAgICAgICAgICBsZXQgc2VsZWN0ZWRQbGFuVGl0bGUgPVxyXG4gICAgICAgICAgICAgICAgICAgIHNlbGVjdGVkUGxhbi5xdWVyeVNlbGVjdG9yKFwiLnBsYW4tdGl0bGVcIik7XHJcbiAgICAgICAgICAgICAgICBsZXQgc2VsZWN0ZWRQbGFuUHJpY2UgPVxyXG4gICAgICAgICAgICAgICAgICAgIHNlbGVjdGVkUGxhbi5xdWVyeVNlbGVjdG9yKFwiLnBsYW4tcHJpY2VcIik7XHJcbiAgICAgICAgICAgICAgICBzdW1tYXJ5UGxhblRpdGxlLnRleHRDb250ZW50ID0gYCR7c2VsZWN0ZWRQbGFuVGl0bGUudGV4dENvbnRlbnR9ICgke2R1cmF0aW9ufSlgO1xyXG4gICAgICAgICAgICAgICAgc3VtbWFyeVBsYW5QcmljZS50ZXh0Q29udGVudCA9IGAke3NlbGVjdGVkUGxhblByaWNlLnRleHRDb250ZW50fWA7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuICAgICAgICAvLyBQbGFuIENoYW5nZSBMaW5rXHJcbiAgICAgICAgc3VtbWFyeVBsYW5DaGFuZ2VMaW5rLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XHJcbiAgICAgICAgICAgIGN1cnJlbnRTdGVwID0gMTtcclxuICAgICAgICAgICAgc2hvd1N0ZXAoY3VycmVudFN0ZXApO1xyXG4gICAgICAgICAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbShcImN1cnJlbnRTdGVwXCIsIEpTT04uc3RyaW5naWZ5KGN1cnJlbnRTdGVwKSk7XHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcblxyXG4gICAgLy8gRnVuY3Rpb246IFVwZGF0ZSBBZGRvbiBTdW1tYXJ5XHJcbiAgICBmdW5jdGlvbiB1cGRhdGVBZGRvblN1bW1hcnkoKSB7XHJcbiAgICAgICAgYWRkb25JbnB1dHMuZm9yRWFjaCgoYWRkb25JbnB1dCkgPT4ge1xyXG4gICAgICAgICAgICBjb25zdCBhZGRvbkxhYmVsID0gYWRkb25JbnB1dC5wYXJlbnRFbGVtZW50O1xyXG4gICAgICAgICAgICBjb25zdCBhZGRvblRpdGxlID0gYWRkb25MYWJlbC5xdWVyeVNlbGVjdG9yKFwiLmFkZG9uLXRpdGxlXCIpO1xyXG4gICAgICAgICAgICBjb25zdCBhZGRvblByaWNlID0gYWRkb25MYWJlbC5xdWVyeVNlbGVjdG9yKFwiLmFkZG9uLXByaWNlXCIpO1xyXG5cclxuICAgICAgICAgICAgY29uc3QgbGkgPSBmdW5jLmNyZWF0ZShcImxpXCIpO1xyXG4gICAgICAgICAgICBjb25zdCBjdXJyZW50SXRlbUlkID0gYCR7YWRkb25JbnB1dC5pZH1zdW1tYXJ5YDtcclxuICAgICAgICAgICAgbGkuaWQgPSBjdXJyZW50SXRlbUlkO1xyXG4gICAgICAgICAgICBjb25zdCBjdXJyZW50SXRlbSA9IGZ1bmMuc2VsZWN0KGAjJHtjdXJyZW50SXRlbUlkfWApO1xyXG5cclxuICAgICAgICAgICAgbGkuY2xhc3NMaXN0LmFkZChcImZsZXhcIiwgXCJpdGVtLWNlbnRlclwiLCBcImp1c3RpZnktYmV0d2VlblwiKTtcclxuICAgICAgICAgICAgbGkuaW5uZXJIVE1MID0gYFxyXG4gICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9XCJ0ZXh0LXNtIHRleHQtZ3JheS03MDBcIj4ke2FkZG9uVGl0bGUudGV4dENvbnRlbnR9PC9zcGFuPlxyXG4gICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9XCJ0ZXh0LXNtXCI+JHthZGRvblByaWNlLnRleHRDb250ZW50fTwvc3Bhbj5cclxuICAgICAgICAgICAgYDtcclxuXHJcbiAgICAgICAgICAgIGlmIChhZGRvbklucHV0LmNoZWNrZWQgJiYgIWN1cnJlbnRJdGVtKSB7XHJcbiAgICAgICAgICAgICAgICBzdW1tYXJ5QWRkb25MaXN0LmFwcGVuZChsaSk7XHJcbiAgICAgICAgICAgIH0gZWxzZSBpZiAoIWFkZG9uSW5wdXQuY2hlY2tlZCAmJiBjdXJyZW50SXRlbSkge1xyXG4gICAgICAgICAgICAgICAgY3VycmVudEl0ZW0ucmVtb3ZlKCk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuICAgIH1cclxuXHJcbiAgICAvLyBGdW50aW9uOiBDYWxjdWxhdGUgUGxhbiBDb3N0XHJcbiAgICBmdW5jdGlvbiBjYWxjdWxhdGVQbGFuQ29zdCgpIHtcclxuICAgICAgICBsZXQgcGxhbkNvc3QgPSAwO1xyXG4gICAgICAgIHBsYW5JbnB1dHMuZm9yRWFjaCgocGxhbklucHV0KSA9PiB7XHJcbiAgICAgICAgICAgIGlmIChwbGFuSW5wdXQuY2hlY2tlZCAmJiBwbGFuSW5wdXQuaWQgPT09IFwiYXJjaGFkZVwiKSB7XHJcbiAgICAgICAgICAgICAgICBwbGFuQ29zdCA9IGR1cmF0aW9uID09PSBcInllYXJseVwiID8gOTAgOiA5O1xyXG4gICAgICAgICAgICB9IGVsc2UgaWYgKHBsYW5JbnB1dC5jaGVja2VkICYmIHBsYW5JbnB1dC5pZCA9PT0gXCJhZHZhbmNlXCIpIHtcclxuICAgICAgICAgICAgICAgIHBsYW5Db3N0ID0gZHVyYXRpb24gPT09IFwieWVhcmx5XCIgPyAxMjAgOiAxMjtcclxuICAgICAgICAgICAgfSBlbHNlIGlmIChwbGFuSW5wdXQuY2hlY2tlZCAmJiBwbGFuSW5wdXQuaWQgPT09IFwicHJvXCIpIHtcclxuICAgICAgICAgICAgICAgIHBsYW5Db3N0ID0gZHVyYXRpb24gPT09IFwieWVhcmx5XCIgPyAxNTAgOiAxNTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIHJldHVybiBwbGFuQ29zdDtcclxuICAgIH1cclxuICAgIGxldCBwbGFuQ29zdCA9IGNhbGN1bGF0ZVBsYW5Db3N0KCk7XHJcbiAgICAvLyBGdW5jdGlvbjogQ2FsY3VsYXRlIEFkZG9uIENvc3RcclxuICAgIGZ1bmN0aW9uIGNhbGN1bGF0ZUFkZG9uQ29zdCgpIHtcclxuICAgICAgICBsZXQgYWRkb25zQ29zdCA9IDA7XHJcbiAgICAgICAgYWRkb25JbnB1dHMuZm9yRWFjaCgoYWRkb25JbnB1dCkgPT4ge1xyXG4gICAgICAgICAgICBpZiAoYWRkb25JbnB1dC5jaGVja2VkICYmIGFkZG9uSW5wdXQuaWQgPT09IFwic2VydmljZVwiKSB7XHJcbiAgICAgICAgICAgICAgICBsZXQgYWRkb25Db3N0ID0gZHVyYXRpb24gPT09IFwieWVhcmx5XCIgPyAxMCA6IDE7XHJcbiAgICAgICAgICAgICAgICBhZGRvbnNDb3N0ICs9IGFkZG9uQ29zdDtcclxuICAgICAgICAgICAgfSBlbHNlIGlmIChcclxuICAgICAgICAgICAgICAgIGFkZG9uSW5wdXQuY2hlY2tlZCAmJlxyXG4gICAgICAgICAgICAgICAgKGFkZG9uSW5wdXQuaWQgPT09IFwic3RvcmFnZVwiIHx8IGFkZG9uSW5wdXQuaWQgPT09IFwicHJvZmlsZVwiKVxyXG4gICAgICAgICAgICApIHtcclxuICAgICAgICAgICAgICAgIGxldCBhZGRvbkNvc3QgPSBkdXJhdGlvbiA9PT0gXCJ5ZWFybHlcIiA/IDIwIDogMjtcclxuICAgICAgICAgICAgICAgIGFkZG9uc0Nvc3QgKz0gYWRkb25Db3N0O1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSk7XHJcbiAgICAgICAgcmV0dXJuIGFkZG9uc0Nvc3Q7XHJcbiAgICB9XHJcbiAgICBsZXQgYWRkb25zQ29zdCA9IGNhbGN1bGF0ZUFkZG9uQ29zdCgpO1xyXG5cclxuICAgIGxldCB0b3RhbENvc3QgPSBwbGFuQ29zdCArIGFkZG9uc0Nvc3Q7XHJcblxyXG4gICAgLy8gRnVuY3Rpb246IFVwZGF0ZSBUb3RhbCBTdW1tYXJ5XHJcbiAgICBmdW5jdGlvbiB1cGRhdGVUb3RhbFN1bW1hcnkoKSB7XHJcbiAgICAgICAgY29uc3QgdG90YWxUaXRsZSA9IGZ1bmMuc2VsZWN0KFwiLnRvdGFsLXRpdGxlXCIpO1xyXG4gICAgICAgIHRvdGFsVGl0bGUuY2xhc3NMaXN0LmFkZChcInRleHQtc21cIik7XHJcbiAgICAgICAgY29uc3QgdG90YWxQcmljZSA9IGZ1bmMuc2VsZWN0KFwiLnRvdGFsLXByaWNlXCIpO1xyXG4gICAgICAgIHRvdGFsUHJpY2UuY2xhc3NMaXN0LmFkZChcclxuICAgICAgICAgICAgXCJ0ZXh0LWxnXCIsXHJcbiAgICAgICAgICAgIFwiZm9udC1ib2xkXCIsXHJcbiAgICAgICAgICAgIFwidGV4dC1baHNsKDI0MyxfMTAwJSxfNjIlKV1cIlxyXG4gICAgICAgICk7XHJcbiAgICAgICAgdG90YWxUaXRsZS50ZXh0Q29udGVudCA9IGBUb3RhbCAocGVyICR7ZHVyYXRpb24uc2xpY2UoMCwgLTIpfSlgO1xyXG4gICAgICAgIHRvdGFsUHJpY2UudGV4dENvbnRlbnQgPSBgJCR7dG90YWxDb3N0fS8ke3Blcn1gO1xyXG4gICAgfVxyXG5cclxuICAgIC8vIGZ1bmN0aW9uOiBWYWxpZGF0ZSBGb3JtXHJcbiAgICBmdW5jdGlvbiB2YWxpZGF0ZUZvcm0oKSB7XHJcbiAgICAgICAgaWYgKFxyXG4gICAgICAgICAgICBjdXJyZW50U3RlcCA9PT0gMCAmJlxyXG4gICAgICAgICAgICAobmFtZUlucHV0LnZhbHVlID09PSBcIlwiIHx8XHJcbiAgICAgICAgICAgICAgICBlbWFpbElucHV0LnZhbHVlID09PSBcIlwiIHx8XHJcbiAgICAgICAgICAgICAgICBwaG9uZUlucHV0LnZhbHVlID09PSBcIlwiKVxyXG4gICAgICAgICkge1xyXG4gICAgICAgICAgICBjb25zdCBpbnZhbGlkTWVzc2FnZSA9IGZ1bmMuY3JlYXRlKFwicFwiKTtcclxuICAgICAgICAgICAgaW52YWxpZE1lc3NhZ2UuY2xhc3NMaXN0LmFkZChcclxuICAgICAgICAgICAgICAgIFwiYWJzb2x1dGVcIixcclxuICAgICAgICAgICAgICAgIFwidGV4dC1yZWQtNzAwXCIsXHJcbiAgICAgICAgICAgICAgICBcIi10b3AtNVwiLFxyXG4gICAgICAgICAgICAgICAgXCJsZWZ0LTBcIlxyXG4gICAgICAgICAgICApO1xyXG4gICAgICAgICAgICBpbnZhbGlkTWVzc2FnZS5pZCA9IFwiaW52YWxpZC1tZXNzYWdlMVwiO1xyXG4gICAgICAgICAgICBjb25zdCBoYXNJbnZhbGlkTWVzc2FnZTEgPSBmdW5jLnNlbGVjdChcIiNpbnZhbGlkLW1lc3NhZ2UxXCIpO1xyXG4gICAgICAgICAgICBpbnZhbGlkTWVzc2FnZS50ZXh0Q29udGVudCA9IFwiQWxsIGZpZWxkcyBhcmUgcmVxdWlyZWRcIjtcclxuICAgICAgICAgICAgY29uc3Qgc2hvd2VkRm9ybVBvcnRpb24gPSBmdW5jLnNlbGVjdChgI3N0ZXAxYCk7XHJcbiAgICAgICAgICAgIGNvbnN0IGlucHV0V3JhcHBlciA9XHJcbiAgICAgICAgICAgICAgICBzaG93ZWRGb3JtUG9ydGlvbi5xdWVyeVNlbGVjdG9yKFwiLmlucHV0LXdyYXBwZXJcIik7XHJcbiAgICAgICAgICAgIGlmICghaGFzSW52YWxpZE1lc3NhZ2UxKSB7XHJcbiAgICAgICAgICAgICAgICBpbnB1dFdyYXBwZXIuYXBwZW5kKGludmFsaWRNZXNzYWdlKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBzZXRUaW1lb3V0KCgpID0+IHtcclxuICAgICAgICAgICAgICAgIGludmFsaWRNZXNzYWdlLnJlbW92ZSgpO1xyXG4gICAgICAgICAgICB9LCA1MDAwKTtcclxuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xyXG4gICAgICAgIH1cclxuICAgICAgICBpZiAoXHJcbiAgICAgICAgICAgIGN1cnJlbnRTdGVwID09PSAxICYmXHJcbiAgICAgICAgICAgICFwbGFuSW5wdXRzWzBdLmNoZWNrZWQgJiZcclxuICAgICAgICAgICAgIXBsYW5JbnB1dHNbMV0uY2hlY2tlZCAmJlxyXG4gICAgICAgICAgICAhcGxhbklucHV0c1syXS5jaGVja2VkXHJcbiAgICAgICAgKSB7XHJcbiAgICAgICAgICAgIGNvbnN0IGludmFsaWRNZXNzYWdlID0gZnVuYy5jcmVhdGUoXCJwXCIpO1xyXG4gICAgICAgICAgICBpbnZhbGlkTWVzc2FnZS5jbGFzc0xpc3QuYWRkKFxyXG4gICAgICAgICAgICAgICAgXCJhYnNvbHV0ZVwiLFxyXG4gICAgICAgICAgICAgICAgXCJ0ZXh0LXJlZC03MDBcIixcclxuICAgICAgICAgICAgICAgIFwiLXRvcC01XCIsXHJcbiAgICAgICAgICAgICAgICBcImxlZnQtMFwiXHJcbiAgICAgICAgICAgICk7XHJcbiAgICAgICAgICAgIGludmFsaWRNZXNzYWdlLmlkID0gXCJpbnZhbGlkLW1lc3NhZ2UyXCI7XHJcbiAgICAgICAgICAgIGNvbnN0IGhhc0ludmFsaWRNZXNzYWdlMiA9IGZ1bmMuc2VsZWN0KFwiI2ludmFsaWQtbWVzc2FnZTJcIik7XHJcbiAgICAgICAgICAgIGludmFsaWRNZXNzYWdlLnRleHRDb250ZW50ID0gXCJZb3UgZGlkbid0IGNob29zZSBhbnkgcGxhblwiO1xyXG4gICAgICAgICAgICBjb25zdCBzaG93ZWRGb3JtUG9ydGlvbiA9IGZ1bmMuc2VsZWN0KGAjc3RlcDJgKTtcclxuICAgICAgICAgICAgY29uc3QgaW5wdXRXcmFwcGVyMiA9XHJcbiAgICAgICAgICAgICAgICBzaG93ZWRGb3JtUG9ydGlvbi5xdWVyeVNlbGVjdG9yKFwiLmlucHV0LXdyYXBwZXJcIik7XHJcbiAgICAgICAgICAgIGlmICghaGFzSW52YWxpZE1lc3NhZ2UyKSB7XHJcbiAgICAgICAgICAgICAgICBpbnB1dFdyYXBwZXIyLmFwcGVuZChpbnZhbGlkTWVzc2FnZSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgc2V0VGltZW91dCgoKSA9PiB7XHJcbiAgICAgICAgICAgICAgICBpbnZhbGlkTWVzc2FnZS5yZW1vdmUoKTtcclxuICAgICAgICAgICAgfSwgNTAwMCk7XHJcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIHRydWU7XHJcbiAgICB9XHJcblxyXG4gICAgLy8gRnVuY3Rpb246IFNldCBMb2NhbCBTdG9yYWdlXHJcbiAgICBmdW5jdGlvbiBzZXRMb2NhbFN0b3JhZ2UoKSB7XHJcbiAgICAgICAgaWYgKGN1cnJlbnRTdGVwID09PSAxKSB7XHJcbiAgICAgICAgICAgIHBsYW5JbnB1dHMuZm9yRWFjaCgocGxhbklucHV0LCBpbmRleCkgPT4ge1xyXG4gICAgICAgICAgICAgICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oXHJcbiAgICAgICAgICAgICAgICAgICAgYHBsYW5JbnB1dCR7aW5kZXh9YCxcclxuICAgICAgICAgICAgICAgICAgICBKU09OLnN0cmluZ2lmeShwbGFuSW5wdXQuY2hlY2tlZCA9PT0gdHJ1ZSA/IHRydWUgOiBmYWxzZSlcclxuICAgICAgICAgICAgICAgICk7XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgIH1cclxuICAgICAgICBpZiAoY3VycmVudFN0ZXAgPT09IDIpIHtcclxuICAgICAgICAgICAgYWRkb25JbnB1dHMuZm9yRWFjaCgoYWRkb25JbnB1dCwgaW5kZXgpID0+IHtcclxuICAgICAgICAgICAgICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKFxyXG4gICAgICAgICAgICAgICAgICAgIGBhZGRvbklucHV0JHtpbmRleH1gLFxyXG4gICAgICAgICAgICAgICAgICAgIEpTT04uc3RyaW5naWZ5KGFkZG9uSW5wdXQuY2hlY2tlZCA9PT0gdHJ1ZSA/IHRydWUgOiBmYWxzZSlcclxuICAgICAgICAgICAgICAgICk7XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAvLyBGdW5jdGlvbjogR2V0IExvY2FsIFN0b3JhZ2VcclxuICAgIGZ1bmN0aW9uIGdldExvY2FsU3RvcmFnZSgpIHtcclxuICAgICAgICBwbGFuSW5wdXRzLmZvckVhY2goKHBsYW5JbnB1dCwgaW5kZXgpID0+IHtcclxuICAgICAgICAgICAgcGxhbklucHV0LmNoZWNrZWQgPSBKU09OLnBhcnNlKFxyXG4gICAgICAgICAgICAgICAgbG9jYWxTdG9yYWdlLmdldEl0ZW0oYHBsYW5JbnB1dCR7aW5kZXh9YClcclxuICAgICAgICAgICAgKTtcclxuICAgICAgICB9KTtcclxuICAgICAgICBhZGRvbklucHV0cy5mb3JFYWNoKChhZGRvbklucHV0LCBpbmRleCkgPT4ge1xyXG4gICAgICAgICAgICBhZGRvbklucHV0LmNoZWNrZWQgPSBKU09OLnBhcnNlKFxyXG4gICAgICAgICAgICAgICAgbG9jYWxTdG9yYWdlLmdldEl0ZW0oYGFkZG9uSW5wdXQke2luZGV4fWApXHJcbiAgICAgICAgICAgICk7XHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcblxyXG4gICAgLy8gRnVuY3Rpb246IGluaXRpYWxpemF0aW9uXHJcbiAgICBmdW5jdGlvbiBpbml0aWFsaXplRm9ybSgpIHtcclxuICAgICAgICBzaG93U3RlcChjdXJyZW50U3RlcCk7XHJcbiAgICAgICAgdXBkYXRlTmF2QnRucygpO1xyXG4gICAgICAgIHVwZGF0ZVBsYW5TdGVwKCk7IC8vIGNhdXNlIHByb2JsZW0gc29tZSB0aW1lXHJcbiAgICAgICAgdXBkYXRlQWRkb25TdGVwKCk7XHJcbiAgICAgICAgdXBkYXRlUGxhblN1bW1hcnkoKTtcclxuICAgICAgICB1cGRhdGVBZGRvblN1bW1hcnkoKTtcclxuXHJcbiAgICAgICAgcHJldkJ0bnMuZm9yRWFjaCgocHJldkJ0bikgPT4ge1xyXG4gICAgICAgICAgICBwcmV2QnRuLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCBnb1RvUHJldmlvdXNTdGVwKTtcclxuICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgbmV4dEJ0bnMuZm9yRWFjaCgobmV4dEJ0bikgPT4ge1xyXG4gICAgICAgICAgICBuZXh0QnRuLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XHJcbiAgICAgICAgICAgICAgICBpZiAodmFsaWRhdGVGb3JtKCkpIHtcclxuICAgICAgICAgICAgICAgICAgICBzZXRMb2NhbFN0b3JhZ2UoKTtcclxuICAgICAgICAgICAgICAgICAgICBnb1RvTmV4dFN0ZXAoKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgfSk7XHJcblxyXG4gICAgICAgIG5hbWVJbnB1dC5hZGRFdmVudExpc3RlbmVyKFwia2V5dXBcIiwgKCkgPT4ge1xyXG4gICAgICAgICAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbShcIm5hbWVJbnB1dFwiLCBKU09OLnN0cmluZ2lmeShuYW1lSW5wdXQudmFsdWUpKTtcclxuICAgICAgICB9KTtcclxuICAgICAgICBlbWFpbElucHV0LmFkZEV2ZW50TGlzdGVuZXIoXCJrZXl1cFwiLCAoKSA9PiB7XHJcbiAgICAgICAgICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKFxyXG4gICAgICAgICAgICAgICAgXCJlbWFpbElucHV0XCIsXHJcbiAgICAgICAgICAgICAgICBKU09OLnN0cmluZ2lmeShlbWFpbElucHV0LnZhbHVlKVxyXG4gICAgICAgICAgICApO1xyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIHBob25lSW5wdXQuYWRkRXZlbnRMaXN0ZW5lcihcImtleXVwXCIsICgpID0+IHtcclxuICAgICAgICAgICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oXHJcbiAgICAgICAgICAgICAgICBcInBob25lSW5wdXRcIixcclxuICAgICAgICAgICAgICAgIEpTT04uc3RyaW5naWZ5KHBob25lSW5wdXQudmFsdWUpXHJcbiAgICAgICAgICAgICk7XHJcbiAgICAgICAgfSk7XHJcblxyXG4gICAgICAgIHBsYW5JbnB1dHMuZm9yRWFjaCgocGxhbklucHV0KSA9PiB7XHJcbiAgICAgICAgICAgIHBsYW5JbnB1dC5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xyXG4gICAgICAgICAgICAgICAgdXBkYXRlUGxhblN1bW1hcnkoKTtcclxuICAgICAgICAgICAgICAgIHBsYW5Db3N0ID0gY2FsY3VsYXRlUGxhbkNvc3QoKTtcclxuICAgICAgICAgICAgICAgIHRvdGFsQ29zdCA9IHBsYW5Db3N0ICsgYWRkb25zQ29zdDtcclxuICAgICAgICAgICAgICAgIHVwZGF0ZVRvdGFsU3VtbWFyeSgpO1xyXG4gICAgICAgICAgICAgICAgY29uc3QgcGFyZW50TGFiZWwgPSBwbGFuSW5wdXQucGFyZW50RWxlbWVudC5wYXJlbnRFbGVtZW50O1xyXG5cclxuICAgICAgICAgICAgICAgIHBsYW5MYWJlbHMuZm9yRWFjaCgocGxhbkxhYmVsKSA9PiB7XHJcbiAgICAgICAgICAgICAgICAgICAgcGxhbkxhYmVsLmNsYXNzTGlzdC5yZW1vdmUoXCJhY3RpdmVcIik7XHJcbiAgICAgICAgICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgICAgICAgICBpZiAocGxhbklucHV0LmNoZWNrZWQpIHtcclxuICAgICAgICAgICAgICAgICAgICBwYXJlbnRMYWJlbC5jbGFzc0xpc3QuYWRkKFwiYWN0aXZlXCIpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgYWRkb25JbnB1dHMuZm9yRWFjaCgoYWRkb25JbnB1dCkgPT4ge1xyXG4gICAgICAgICAgICBhZGRvbklucHV0LmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XHJcbiAgICAgICAgICAgICAgICB1cGRhdGVQbGFuU3VtbWFyeSgpO1xyXG4gICAgICAgICAgICAgICAgdXBkYXRlQWRkb25TdW1tYXJ5KCk7XHJcbiAgICAgICAgICAgICAgICBhZGRvbnNDb3N0ID0gY2FsY3VsYXRlQWRkb25Db3N0KCk7XHJcbiAgICAgICAgICAgICAgICB0b3RhbENvc3QgPSBwbGFuQ29zdCArIGFkZG9uc0Nvc3Q7XHJcbiAgICAgICAgICAgICAgICB1cGRhdGVUb3RhbFN1bW1hcnkoKTtcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgfSk7XHJcblxyXG4gICAgICAgIG5leHRCdG5zLmZvckVhY2goKG5leHRCdG4pID0+IHtcclxuICAgICAgICAgICAgbmV4dEJ0bi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xyXG4gICAgICAgICAgICAgICAgaWYgKGN1cnJlbnRTdGVwID09PSAxKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgdXBkYXRlUGxhblN0ZXAoKTtcclxuICAgICAgICAgICAgICAgICAgICB1cGRhdGVQbGFuU3VtbWFyeSgpO1xyXG4gICAgICAgICAgICAgICAgICAgIHVwZGF0ZUFkZG9uU3VtbWFyeSgpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgdG9nZ2xlSW5wdXQuYWRkRXZlbnRMaXN0ZW5lcihcImNoYW5nZVwiLCAoZSkgPT4ge1xyXG4gICAgICAgICAgICBkdXJhdGlvbiA9IHRvZ2dsZS5jaGVja2VkID8gXCJ5ZWFybHlcIiA6IFwibW9udGhseVwiO1xyXG4gICAgICAgICAgICBwZXIgPSBkdXJhdGlvbiA9PT0gXCJ5ZWFybHlcIiA/IFwieXJcIiA6IFwibW9cIjtcclxuICAgICAgICAgICAgdXBkYXRlUGxhblN0ZXAoKTtcclxuICAgICAgICAgICAgdXBkYXRlQWRkb25TdGVwKCk7XHJcbiAgICAgICAgICAgIHVwZGF0ZVBsYW5TdW1tYXJ5KCk7XHJcbiAgICAgICAgICAgIHdoaWxlIChzdW1tYXJ5QWRkb25MaXN0LmZpcnN0RWxlbWVudENoaWxkKSB7XHJcbiAgICAgICAgICAgICAgICBzdW1tYXJ5QWRkb25MaXN0LnJlbW92ZUNoaWxkKFxyXG4gICAgICAgICAgICAgICAgICAgIHN1bW1hcnlBZGRvbkxpc3QuZmlyc3RFbGVtZW50Q2hpbGRcclxuICAgICAgICAgICAgICAgICk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgdXBkYXRlQWRkb25TdW1tYXJ5KCk7XHJcbiAgICAgICAgICAgIHBsYW5Db3N0ID0gY2FsY3VsYXRlUGxhbkNvc3QoKTtcclxuICAgICAgICAgICAgYWRkb25zQ29zdCA9IGNhbGN1bGF0ZUFkZG9uQ29zdCgpO1xyXG4gICAgICAgICAgICB0b3RhbENvc3QgPSBwbGFuQ29zdCArIGFkZG9uc0Nvc3Q7XHJcbiAgICAgICAgICAgIHVwZGF0ZVRvdGFsU3VtbWFyeSgpO1xyXG5cclxuICAgICAgICAgICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oXCJkdXJhdGlvblwiLCBKU09OLnN0cmluZ2lmeShkdXJhdGlvbikpO1xyXG4gICAgICAgICAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbShcInBlclwiLCBKU09OLnN0cmluZ2lmeShwZXIpKTtcclxuICAgICAgICAgICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oXHJcbiAgICAgICAgICAgICAgICBcInRvZ2dsZUlucHV0XCIsXHJcbiAgICAgICAgICAgICAgICBKU09OLnN0cmluZ2lmeSh0b2dnbGVJbnB1dC5jaGVja2VkID8gdHJ1ZSA6IGZhbHNlKVxyXG4gICAgICAgICAgICApO1xyXG4gICAgICAgIH0pO1xyXG5cclxuICAgICAgICBpZiAoY3VycmVudFN0ZXAgPT09IHN0ZXBzLmxlbmd0aCAtIDEpIHtcclxuICAgICAgICAgICAgbG9jYWxTdG9yYWdlLmNsZWFyKCk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIGluaXRpYWxpemVGb3JtKCk7XHJcbn0pO1xyXG4vLyBzdGVwc1tjdXJyZW50U3RlcF0uc3R5bGUuZGlzcGxheSA9IFwiZmxleFwiO1xyXG5cclxuLy8gbmV4dEJ0bnMuZm9yRWFjaCgobmV4dEJ0bikgPT4ge1xyXG4vLyAgICAgbmV4dEJ0bi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKGUpID0+IHtcclxuLy8gICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7XHJcbi8vICAgICAgICAgaWYgKGN1cnJlbnRTdGVwIDwgc3RlcHMubGVuZ3RoIC0gMSkge1xyXG4vLyAgICAgICAgICAgICBzdGVwc1tjdXJyZW50U3RlcF0uc3R5bGUuZGlzcGxheSA9IFwibm9uZVwiO1xyXG4vLyAgICAgICAgICAgICBjdXJyZW50U3RlcCsrO1xyXG4vLyAgICAgICAgICAgICBzdGVwc1tjdXJyZW50U3RlcF0uc3R5bGUuZGlzcGxheSA9IFwiZmxleFwiO1xyXG4vLyAgICAgICAgIH1cclxuLy8gICAgIH0pO1xyXG4vLyB9KTtcclxuXHJcbi8vIHByZXZCdG5zLmZvckVhY2goKHByZXZCdG4pID0+IHtcclxuLy8gICAgIHByZXZCdG4uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIChlKSA9PiB7XHJcbi8vICAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xyXG4vLyAgICAgICAgIGlmIChjdXJyZW50U3RlcCA+IDApIHtcclxuLy8gICAgICAgICAgICAgc3RlcHNbY3VycmVudFN0ZXBdLnN0eWxlLmRpc3BsYXkgPSBcIm5vbmVcIjtcclxuLy8gICAgICAgICAgICAgY3VycmVudFN0ZXAtLTtcclxuLy8gICAgICAgICAgICAgc3RlcHNbY3VycmVudFN0ZXBdLnN0eWxlLmRpc3BsYXkgPSBcImZsZXhcIjtcclxuLy8gICAgICAgICB9XHJcbi8vICAgICB9KTtcclxuLy8gfSk7XHJcblxyXG4vLyBuYXZCdG5zLmZvckVhY2goKG5hdkJ0biwgaW5kZXgpID0+IHtcclxuLy8gICAgIGlmIChpbmRleCA9PSBjdXJyZW50U3RlcCkge1xyXG4vLyAgICAgICAgIG5hdkJ0bi5zdHlsZS5iYWNrZ3JvdW5kQ29sb3IgPSBcImhzbCgyMjgsIDEwMCUsIDg0JSlcIjtcclxuLy8gICAgIH0gZWxzZSB7XHJcbi8vICAgICAgICAgbmF2QnRuLnN0eWxlLmJhY2tncm91bmRDb2xvciA9IFwidHJhbnNwYXJlbnRcIjtcclxuLy8gICAgIH1cclxuLy8gfSk7XHJcblxyXG4vLyBzdGVwTGlua3MuZm9yRWFjaCgoc3RlcExpbmssIGluZGV4KSA9PiB7XHJcbi8vICAgICBzdGVwTGluay5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKGUpID0+IHtcclxuLy8gICAgICAgICBlLnByZXZlbnREZWZhdWx0O1xyXG4vLyAgICAgICAgIHN0ZXBzW2N1cnJlbnRTdGVwXS5zdHlsZS5kaXNwbGF5ID0gXCJub25lXCI7XHJcbi8vICAgICAgICAgY3VycmVudFN0ZXAgPSBzdGVwTGluay5kYXRhc2V0LnN0ZXA7XHJcbi8vICAgICAgICAgc3RlcHNbY3VycmVudFN0ZXBdLnN0eWxlLmRpc3BsYXkgPSBcImZsZXhcIjtcclxuLy8gICAgIH0pO1xyXG4vLyB9KTtcclxuXHJcbi8vIHN0ZXAgMlxyXG4iLCIvLyBUaGUgbW9kdWxlIGNhY2hlXG52YXIgX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fID0ge307XG5cbi8vIFRoZSByZXF1aXJlIGZ1bmN0aW9uXG5mdW5jdGlvbiBfX3dlYnBhY2tfcmVxdWlyZV9fKG1vZHVsZUlkKSB7XG5cdC8vIENoZWNrIGlmIG1vZHVsZSBpcyBpbiBjYWNoZVxuXHR2YXIgY2FjaGVkTW9kdWxlID0gX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fW21vZHVsZUlkXTtcblx0aWYgKGNhY2hlZE1vZHVsZSAhPT0gdW5kZWZpbmVkKSB7XG5cdFx0cmV0dXJuIGNhY2hlZE1vZHVsZS5leHBvcnRzO1xuXHR9XG5cdC8vIENyZWF0ZSBhIG5ldyBtb2R1bGUgKGFuZCBwdXQgaXQgaW50byB0aGUgY2FjaGUpXG5cdHZhciBtb2R1bGUgPSBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX19bbW9kdWxlSWRdID0ge1xuXHRcdC8vIG5vIG1vZHVsZS5pZCBuZWVkZWRcblx0XHQvLyBubyBtb2R1bGUubG9hZGVkIG5lZWRlZFxuXHRcdGV4cG9ydHM6IHt9XG5cdH07XG5cblx0Ly8gRXhlY3V0ZSB0aGUgbW9kdWxlIGZ1bmN0aW9uXG5cdF9fd2VicGFja19tb2R1bGVzX19bbW9kdWxlSWRdKG1vZHVsZSwgbW9kdWxlLmV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pO1xuXG5cdC8vIFJldHVybiB0aGUgZXhwb3J0cyBvZiB0aGUgbW9kdWxlXG5cdHJldHVybiBtb2R1bGUuZXhwb3J0cztcbn1cblxuLy8gZXhwb3NlIHRoZSBtb2R1bGVzIG9iamVjdCAoX193ZWJwYWNrX21vZHVsZXNfXylcbl9fd2VicGFja19yZXF1aXJlX18ubSA9IF9fd2VicGFja19tb2R1bGVzX187XG5cbiIsIl9fd2VicGFja19yZXF1aXJlX18ubyA9IGZ1bmN0aW9uKG9iaiwgcHJvcCkgeyByZXR1cm4gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iaiwgcHJvcCk7IH0iLCIvLyBubyBiYXNlVVJJXG5cbi8vIG9iamVjdCB0byBzdG9yZSBsb2FkZWQgYW5kIGxvYWRpbmcgY2h1bmtzXG4vLyB1bmRlZmluZWQgPSBjaHVuayBub3QgbG9hZGVkLCBudWxsID0gY2h1bmsgcHJlbG9hZGVkL3ByZWZldGNoZWRcbi8vIFtyZXNvbHZlLCByZWplY3QsIFByb21pc2VdID0gY2h1bmsgbG9hZGluZywgMCA9IGNodW5rIGxvYWRlZFxudmFyIGluc3RhbGxlZENodW5rcyA9IHtcblx0NDc6IDAsXG5cdDc5OiAwXG59O1xuXG4vLyBubyBjaHVuayBvbiBkZW1hbmQgbG9hZGluZ1xuXG4vLyBubyBwcmVmZXRjaGluZ1xuXG4vLyBubyBwcmVsb2FkZWRcblxuLy8gbm8gSE1SXG5cbi8vIG5vIEhNUiBtYW5pZmVzdFxuXG5fX3dlYnBhY2tfcmVxdWlyZV9fLk8uaiA9IGZ1bmN0aW9uKGNodW5rSWQpIHsgcmV0dXJuIGluc3RhbGxlZENodW5rc1tjaHVua0lkXSA9PT0gMDsgfTtcblxuLy8gaW5zdGFsbCBhIEpTT05QIGNhbGxiYWNrIGZvciBjaHVuayBsb2FkaW5nXG52YXIgd2VicGFja0pzb25wQ2FsbGJhY2sgPSBmdW5jdGlvbihwYXJlbnRDaHVua0xvYWRpbmdGdW5jdGlvbiwgZGF0YSkge1xuXHR2YXIgY2h1bmtJZHMgPSBkYXRhWzBdO1xuXHR2YXIgbW9yZU1vZHVsZXMgPSBkYXRhWzFdO1xuXHR2YXIgcnVudGltZSA9IGRhdGFbMl07XG5cdC8vIGFkZCBcIm1vcmVNb2R1bGVzXCIgdG8gdGhlIG1vZHVsZXMgb2JqZWN0LFxuXHQvLyB0aGVuIGZsYWcgYWxsIFwiY2h1bmtJZHNcIiBhcyBsb2FkZWQgYW5kIGZpcmUgY2FsbGJhY2tcblx0dmFyIG1vZHVsZUlkLCBjaHVua0lkLCBpID0gMDtcblx0aWYoY2h1bmtJZHMuc29tZShmdW5jdGlvbihpZCkgeyByZXR1cm4gaW5zdGFsbGVkQ2h1bmtzW2lkXSAhPT0gMDsgfSkpIHtcblx0XHRmb3IobW9kdWxlSWQgaW4gbW9yZU1vZHVsZXMpIHtcblx0XHRcdGlmKF9fd2VicGFja19yZXF1aXJlX18ubyhtb3JlTW9kdWxlcywgbW9kdWxlSWQpKSB7XG5cdFx0XHRcdF9fd2VicGFja19yZXF1aXJlX18ubVttb2R1bGVJZF0gPSBtb3JlTW9kdWxlc1ttb2R1bGVJZF07XG5cdFx0XHR9XG5cdFx0fVxuXHRcdGlmKHJ1bnRpbWUpIHZhciByZXN1bHQgPSBydW50aW1lKF9fd2VicGFja19yZXF1aXJlX18pO1xuXHR9XG5cdGlmKHBhcmVudENodW5rTG9hZGluZ0Z1bmN0aW9uKSBwYXJlbnRDaHVua0xvYWRpbmdGdW5jdGlvbihkYXRhKTtcblx0Zm9yKDtpIDwgY2h1bmtJZHMubGVuZ3RoOyBpKyspIHtcblx0XHRjaHVua0lkID0gY2h1bmtJZHNbaV07XG5cdFx0aWYoX193ZWJwYWNrX3JlcXVpcmVfXy5vKGluc3RhbGxlZENodW5rcywgY2h1bmtJZCkgJiYgaW5zdGFsbGVkQ2h1bmtzW2NodW5rSWRdKSB7XG5cdFx0XHRpbnN0YWxsZWRDaHVua3NbY2h1bmtJZF1bMF0oKTtcblx0XHR9XG5cdFx0aW5zdGFsbGVkQ2h1bmtzW2NodW5rSWRdID0gMDtcblx0fVxuXHRyZXR1cm4gX193ZWJwYWNrX3JlcXVpcmVfXy5PKHJlc3VsdCk7XG59XG5cbnZhciBjaHVua0xvYWRpbmdHbG9iYWwgPSBzZWxmW1wid2VicGFja0NodW5rc2FtcGxlX3Byb2plY3RzXCJdID0gc2VsZltcIndlYnBhY2tDaHVua3NhbXBsZV9wcm9qZWN0c1wiXSB8fCBbXTtcbmNodW5rTG9hZGluZ0dsb2JhbC5mb3JFYWNoKHdlYnBhY2tKc29ucENhbGxiYWNrLmJpbmQobnVsbCwgMCkpO1xuY2h1bmtMb2FkaW5nR2xvYmFsLnB1c2ggPSB3ZWJwYWNrSnNvbnBDYWxsYmFjay5iaW5kKG51bGwsIGNodW5rTG9hZGluZ0dsb2JhbC5wdXNoLmJpbmQoY2h1bmtMb2FkaW5nR2xvYmFsKSk7IiwiLy8gc3RhcnR1cFxuLy8gTG9hZCBlbnRyeSBtb2R1bGUgYW5kIHJldHVybiBleHBvcnRzXG4vLyBUaGlzIGVudHJ5IG1vZHVsZSBkZXBlbmRzIG9uIG90aGVyIGxvYWRlZCBjaHVua3MgYW5kIGV4ZWN1dGlvbiBuZWVkIHRvIGJlIGRlbGF5ZWRcbnZhciBfX3dlYnBhY2tfZXhwb3J0c19fID0gX193ZWJwYWNrX3JlcXVpcmVfXy5PKHVuZGVmaW5lZCwgWzc5XSwgZnVuY3Rpb24oKSB7IHJldHVybiBfX3dlYnBhY2tfcmVxdWlyZV9fKDM0NCk7IH0pXG5fX3dlYnBhY2tfZXhwb3J0c19fID0gX193ZWJwYWNrX3JlcXVpcmVfXy5PKF9fd2VicGFja19leHBvcnRzX18pO1xuIl0sIm5hbWVzIjpbImRlZmVycmVkIiwic2VsZWN0IiwiZWxlbWVudCIsImRvY3VtZW50IiwicXVlcnlTZWxlY3RvciIsInNlbGVjdEFsbCIsImVsZW1lbnRzIiwicXVlcnlTZWxlY3RvckFsbCIsImNyZWF0ZSIsInRleHQiLCJhcmd1bWVudHMiLCJsZW5ndGgiLCJ1bmRlZmluZWQiLCJjcmVhdGVkRWxlbWVudCIsImNyZWF0ZUVsZW1lbnQiLCJ0ZXh0Q29udGVudCIsImFkZEV2ZW50TGlzdGVuZXIiLCJzdGVwcyIsImZ1bmMiLCJuZXh0QnRucyIsInByZXZCdG5zIiwibmF2QnRucyIsInRvZ2dsZUlucHV0IiwiY2hlY2tlZCIsIkpTT04iLCJwYXJzZSIsImxvY2FsU3RvcmFnZSIsImdldEl0ZW0iLCJuYW1lSW5wdXQiLCJ2YWx1ZSIsImVtYWlsSW5wdXQiLCJwaG9uZUlucHV0IiwicGxhbklucHV0cyIsIl90b0NvbnN1bWFibGVBcnJheSIsInBsYW5MYWJlbHMiLCJtb250aGx5RGVzY3JpcHRpb24iLCJ5ZWFybHlEZXNjcmlwdGlvbiIsImRpc2NvdW50cyIsInBlciIsImFkZG9uSW5wdXRzIiwic3VtbWFyeUFkZG9uTGlzdCIsImR1cmF0aW9uIiwiY3VycmVudFN0ZXAiLCJzaG93U3RlcCIsInN0ZXBJbmRleCIsImZvckVhY2giLCJzdGVwIiwiaW5kZXgiLCJjbGFzc0xpc3QiLCJhZGQiLCJyZW1vdmUiLCJ1cGRhdGVOYXZCdG5zIiwibmF2QnRuIiwic3R5bGUiLCJiYWNrZ3JvdW5kQ29sb3IiLCJnb1RvUHJldmlvdXNTdGVwIiwic2V0SXRlbSIsInN0cmluZ2lmeSIsInVwZGF0ZVBsYW5TdGVwIiwicGxhbklucHV0IiwiaWQiLCJuZXh0RWxlbWVudFNpYmxpbmciLCJjb25jYXQiLCJwYXJlbnRFbGVtZW50IiwiZGlzY291bnQiLCJ1cGRhdGVBZGRvblN0ZXAiLCJhZGRvbklucHV0IiwibGFzdEVsZW1lbnRDaGlsZCIsInVwZGF0ZVBsYW5TdW1tYXJ5Iiwic3VtbWFyeVBsYW5UaXRsZSIsInN1bW1hcnlQbGFuUHJpY2UiLCJzdW1tYXJ5UGxhbkNoYW5nZUxpbmsiLCJzZWxlY3RlZFBsYW4iLCJzZWxlY3RlZFBsYW5UaXRsZSIsInNlbGVjdGVkUGxhblByaWNlIiwidXBkYXRlQWRkb25TdW1tYXJ5IiwiYWRkb25MYWJlbCIsImFkZG9uVGl0bGUiLCJhZGRvblByaWNlIiwibGkiLCJjdXJyZW50SXRlbUlkIiwiY3VycmVudEl0ZW0iLCJpbm5lckhUTUwiLCJhcHBlbmQiLCJjYWxjdWxhdGVQbGFuQ29zdCIsInBsYW5Db3N0IiwiY2FsY3VsYXRlQWRkb25Db3N0IiwiYWRkb25zQ29zdCIsInRvdGFsQ29zdCIsInVwZGF0ZVRvdGFsU3VtbWFyeSIsInRvdGFsVGl0bGUiLCJ0b3RhbFByaWNlIiwic2xpY2UiLCJwcmV2QnRuIiwibmV4dEJ0biIsImludmFsaWRNZXNzYWdlIiwiaGFzSW52YWxpZE1lc3NhZ2UxIiwiaW5wdXRXcmFwcGVyIiwic2V0VGltZW91dCIsImhhc0ludmFsaWRNZXNzYWdlMiIsImlucHV0V3JhcHBlcjIiLCJ2YWxpZGF0ZUZvcm0iLCJwYXJlbnRMYWJlbCIsInBsYW5MYWJlbCIsImUiLCJ0b2dnbGUiLCJmaXJzdEVsZW1lbnRDaGlsZCIsInJlbW92ZUNoaWxkIiwiY2xlYXIiLCJfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX18iLCJfX3dlYnBhY2tfcmVxdWlyZV9fIiwibW9kdWxlSWQiLCJjYWNoZWRNb2R1bGUiLCJleHBvcnRzIiwibW9kdWxlIiwiX193ZWJwYWNrX21vZHVsZXNfXyIsIm0iLCJPIiwicmVzdWx0IiwiY2h1bmtJZHMiLCJmbiIsInByaW9yaXR5Iiwibm90RnVsZmlsbGVkIiwiSW5maW5pdHkiLCJpIiwiZnVsZmlsbGVkIiwiaiIsIk9iamVjdCIsImtleXMiLCJldmVyeSIsImtleSIsInNwbGljZSIsInIiLCJvIiwib2JqIiwicHJvcCIsInByb3RvdHlwZSIsImhhc093blByb3BlcnR5IiwiY2FsbCIsImluc3RhbGxlZENodW5rcyIsImNodW5rSWQiLCJ3ZWJwYWNrSnNvbnBDYWxsYmFjayIsInBhcmVudENodW5rTG9hZGluZ0Z1bmN0aW9uIiwiZGF0YSIsIm1vcmVNb2R1bGVzIiwicnVudGltZSIsInNvbWUiLCJjaHVua0xvYWRpbmdHbG9iYWwiLCJzZWxmIiwiYmluZCIsInB1c2giLCJfX3dlYnBhY2tfZXhwb3J0c19fIl0sInNvdXJjZVJvb3QiOiIifQ==