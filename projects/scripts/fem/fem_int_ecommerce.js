!function(){"use strict";var t,e={839:function(){function t(t){return document.querySelector(t)}function e(t){return document.querySelectorAll(t)}function n(t){return function(t){if(Array.isArray(t))return r(t)}(t)||function(t){if("undefined"!=typeof Symbol&&null!=t[Symbol.iterator]||null!=t["@@iterator"])return Array.from(t)}(t)||function(t,e){if(t){if("string"==typeof t)return r(t,e);var n=Object.prototype.toString.call(t).slice(8,-1);return"Object"===n&&t.constructor&&(n=t.constructor.name),"Map"===n||"Set"===n?Array.from(t):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?r(t,e):void 0}}(t)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function r(t,e){(null==e||e>t.length)&&(e=t.length);for(var n=0,r=new Array(e);n<e;n++)r[n]=t[n];return r}document.addEventListener("DOMContentLoaded",(function(){t("body");var r=n(e(".thumbnail-img")),o=e(".large-img"),c=t(".lightbox-overlay"),a=(c.querySelector(".next"),c.querySelector(".prev"),t(".lightbox-close-img")),i=t(".cart-wrapper"),s=t(".cart-dropdown"),l=t(".dropdown-content"),d=t(".dropdown-content-empty"),u=t(".item-dropdown-display"),f=t(".total-price-dropdown-display"),m=t(".dropdown-delete"),v=t(".checkout"),g=t(".plus"),p=t(".minus"),h=t(".item-amount-display"),L=t(".add-to-cart"),y=t(".cart-badge"),S=n(r.map((function(t){return t.src.replace("-thumbnail","")}))),E=e(".next"),b=e(".prev"),O=t(".hamburger-wrapper"),x=t(".menu"),k=t(".main-nav");O.addEventListener("click",(function(){k.classList.toggle("active"),x.classList.toggle("active"),O.classList.toggle("active")})),i.addEventListener("click",(function(t){s.contains(t.target)||i.classList.toggle("active")})),document.addEventListener("click",(function(t){i.contains(t.target)||s.contains(t.target)||i.classList.remove("active")}));var A=0,C=JSON.parse(localStorage.getItem("totalAmount"))||0,w=125*I,I=JSON.parse(localStorage.getItem("cartTotalAmount"))||0,J=JSON.parse(localStorage.getItem("cartTotalPrice"))||0;0===I&&(l.classList.add("hidden"),v.classList.add("hidden"),d.classList.remove("hidden")),h.textContent=C,y.textContent=I,u.textContent=I,f.textContent="$".concat(J),o.forEach((function(t){t.src=S[A]})),o.forEach((function(t){t.addEventListener("click",(function(){c.classList.add("active")}))})),a.addEventListener("click",(function(){c.classList.remove("active")})),r.forEach((function(t,e){t.addEventListener("click",(function(){r.forEach((function(t){return t.classList.remove("active")})),t.classList.add("active");var n=t.src.replace("-thumbnail","");console.log(n),o.forEach((function(t){t.src=n})),A=e}))})),E.forEach((function(t){t.addEventListener("click",(function(){A<S.length-1&&A++,o.forEach((function(t){t.src=S[A]})),r.forEach((function(t){o.forEach((function(e){e.src===t.src.replace("-thumbnail","")?t.classList.add("active"):t.classList.remove("active")}))}))}))})),b.forEach((function(t){t.addEventListener("click",(function(){A>0&&A--,o.forEach((function(t){t.src=S[A]})),r.forEach((function(t){o.forEach((function(e){e.src===t.src.replace("-thumbnail","")?t.classList.add("active"):t.classList.remove("active")}))}))}))})),g.addEventListener("click",(function(){C++,w=125*C,h.textContent=C,localStorage.setItem("totalAmount",JSON.stringify(C))})),p.addEventListener("click",(function(){C>0&&(C--,w=125*C,h.textContent=C,localStorage.setItem("totalAmount",JSON.stringify(C)))})),m.addEventListener("click",(function(){I=0,J=0,localStorage.setItem("cartTotalAmount",JSON.stringify(I)),localStorage.setItem("cartTotalPrice",JSON.stringify(J)),y.textContent=I,l.classList.add("hidden"),v.classList.add("hidden"),d.classList.remove("hidden"),localStorage.setItem("totalAmount",JSON.stringify(C))})),L.addEventListener("click",(function(){I+=C,J+=w,C=0,w=125*I,h.textContent=C,localStorage.setItem("cartTotalAmount",JSON.stringify(I)),localStorage.setItem("cartTotalPrice",JSON.stringify(J)),y.textContent=I,u.textContent=I,f.textContent="$".concat(J),localStorage.setItem("totalAmount",JSON.stringify(C)),I>0&&(l.classList.remove("hidden"),v.classList.remove("hidden"),d.classList.add("hidden")),0===I&&(l.classList.add("hidden"),v.classList.add("hidden"),d.classList.remove("hidden"))}))}))}},n={};function r(t){var o=n[t];if(void 0!==o)return o.exports;var c=n[t]={exports:{}};return e[t](c,c.exports,r),c.exports}r.m=e,t=[],r.O=function(e,n,o,c){if(!n){var a=1/0;for(d=0;d<t.length;d++){n=t[d][0],o=t[d][1],c=t[d][2];for(var i=!0,s=0;s<n.length;s++)(!1&c||a>=c)&&Object.keys(r.O).every((function(t){return r.O[t](n[s])}))?n.splice(s--,1):(i=!1,c<a&&(a=c));if(i){t.splice(d--,1);var l=o();void 0!==l&&(e=l)}}return e}c=c||0;for(var d=t.length;d>0&&t[d-1][2]>c;d--)t[d]=t[d-1];t[d]=[n,o,c]},r.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},function(){var t={793:0,79:0};r.O.j=function(e){return 0===t[e]};var e=function(e,n){var o,c,a=n[0],i=n[1],s=n[2],l=0;if(a.some((function(e){return 0!==t[e]}))){for(o in i)r.o(i,o)&&(r.m[o]=i[o]);if(s)var d=s(r)}for(e&&e(n);l<a.length;l++)c=a[l],r.o(t,c)&&t[c]&&t[c][0](),t[c]=0;return r.O(d)},n=self.webpackChunksample_projects=self.webpackChunksample_projects||[];n.forEach(e.bind(null,0)),n.push=e.bind(null,n.push.bind(n))}();var o=r.O(void 0,[79],(function(){return r(839)}));o=r.O(o)}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,