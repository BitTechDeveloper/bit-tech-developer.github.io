!function(){"use strict";var t,n={839:function(){function t(t){return document.querySelector(t)}function n(t){return document.querySelectorAll(t)}function e(t){return function(t){if(Array.isArray(t))return r(t)}(t)||function(t){if("undefined"!=typeof Symbol&&null!=t[Symbol.iterator]||null!=t["@@iterator"])return Array.from(t)}(t)||function(t,n){if(t){if("string"==typeof t)return r(t,n);var e=Object.prototype.toString.call(t).slice(8,-1);return"Object"===e&&t.constructor&&(e=t.constructor.name),"Map"===e||"Set"===e?Array.from(t):"Arguments"===e||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(e)?r(t,n):void 0}}(t)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function r(t,n){(null==n||n>t.length)&&(n=t.length);for(var e=0,r=new Array(n);e<n;e++)r[e]=t[e];return r}document.addEventListener("DOMContentLoaded",(function(){t("body");var r=e(n(".thumbnail-img")),c=n(".large-img"),o=t(".lightbox-overlay"),i=(o.querySelector(".next"),o.querySelector(".prev"),t(".lightbox-close-img")),a=t(".cart-wrapper"),s=t(".cart-dropdown"),d=t(".dropdown-content"),l=t(".dropdown-content-empty"),u=t(".item-dropdown-display"),f=t(".total-price-dropdown-display"),v=t(".dropdown-delete"),h=t(".checkout"),p=t(".plus"),m=t(".minus"),L=t(".item-amount-display"),g=t(".cart-badge"),y=e(r.map((function(t){return t.src.replace("-thumbnail","")}))),E=n(".next"),b=n(".prev"),x=t(".hamburger-wrapper"),k=t(".menu"),C=t(".main-nav");x.addEventListener("click",(function(){C.classList.toggle("active"),k.classList.toggle("active"),x.classList.toggle("active")})),a.addEventListener("click",(function(t){s.contains(t.target)||a.classList.toggle("active")})),document.addEventListener("click",(function(t){a.contains(t.target)||s.contains(t.target)||a.classList.remove("active")}));var w=0,O=0,S=125*O;0===O&&(d.classList.add("hidden"),h.classList.add("hidden"),l.classList.remove("hidden")),L.textContent=O,g.textContent=O,c.forEach((function(t){t.src=y[w]})),c.forEach((function(t){t.addEventListener("click",(function(){o.classList.add("active")}))})),i.addEventListener("click",(function(){o.classList.remove("active")})),r.forEach((function(t,n){t.addEventListener("click",(function(){r.forEach((function(t){return t.classList.remove("active")})),t.classList.add("active");var e=t.src.replace("-thumbnail","");console.log(e),c.forEach((function(t){t.src=e})),w=n}))})),E.forEach((function(t){t.addEventListener("click",(function(){w<y.length-1&&w++,c.forEach((function(t){t.src=y[w]})),r.forEach((function(t){c.forEach((function(n){n.src===t.src.replace("-thumbnail","")?t.classList.add("active"):t.classList.remove("active")}))}))}))})),b.forEach((function(t){t.addEventListener("click",(function(){w>0&&w--,c.forEach((function(t){t.src=y[w]})),r.forEach((function(t){c.forEach((function(n){n.src===t.src.replace("-thumbnail","")?t.classList.add("active"):t.classList.remove("active")}))}))}))})),p.addEventListener("click",(function(){O++,S=125*O,L.textContent=O,g.textContent=O,u.textContent=O,f.textContent="$".concat(S),1===O&&(d.classList.remove("hidden"),h.classList.remove("hidden"),l.classList.add("hidden"))})),m.addEventListener("click",(function(){O>0&&(O--,S=125*O,L.textContent=O,g.textContent=O,u.textContent=O,f.textContent="$".concat(S)),0===O&&(d.classList.add("hidden"),h.classList.add("hidden"),l.classList.remove("hidden"))})),v.addEventListener("click",(function(){O=0,S=0,L.textContent=O,g.textContent=O,d.classList.add("hidden"),h.classList.add("hidden"),l.classList.remove("hidden")}))}))}},e={};function r(t){var c=e[t];if(void 0!==c)return c.exports;var o=e[t]={exports:{}};return n[t](o,o.exports,r),o.exports}r.m=n,t=[],r.O=function(n,e,c,o){if(!e){var i=1/0;for(l=0;l<t.length;l++){e=t[l][0],c=t[l][1],o=t[l][2];for(var a=!0,s=0;s<e.length;s++)(!1&o||i>=o)&&Object.keys(r.O).every((function(t){return r.O[t](e[s])}))?e.splice(s--,1):(a=!1,o<i&&(i=o));if(a){t.splice(l--,1);var d=c();void 0!==d&&(n=d)}}return n}o=o||0;for(var l=t.length;l>0&&t[l-1][2]>o;l--)t[l]=t[l-1];t[l]=[e,c,o]},r.o=function(t,n){return Object.prototype.hasOwnProperty.call(t,n)},function(){var t={793:0,79:0};r.O.j=function(n){return 0===t[n]};var n=function(n,e){var c,o,i=e[0],a=e[1],s=e[2],d=0;if(i.some((function(n){return 0!==t[n]}))){for(c in a)r.o(a,c)&&(r.m[c]=a[c]);if(s)var l=s(r)}for(n&&n(e);d<i.length;d++)o=i[d],r.o(t,o)&&t[o]&&t[o][0](),t[o]=0;return r.O(l)},e=self.webpackChunksample_projects=self.webpackChunksample_projects||[];e.forEach(n.bind(null,0)),e.push=n.bind(null,e.push.bind(e))}();var c=r.O(void 0,[79],(function(){return r(839)}));c=r.O(c)}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,