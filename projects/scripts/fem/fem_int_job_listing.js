!function(){"use strict";var e,t={669:function(e,t,n){function o(e){return document.querySelector(e)}function a(e){return document.querySelectorAll(e)}function i(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=document.createElement(e);return t&&(n.textContent=t),n}var r=JSON.parse('[{"id":1,"company":"Photosnap","logo":"../../images/fem/fem-int-job-listing/photosnap.svg","new":true,"featured":true,"position":"Senior Frontend Developer","role":"Frontend","level":"Senior","postedAt":"1d ago","contract":"Full Time","location":"USA Only","languages":["HTML","CSS","JavaScript"],"tools":[]},{"id":2,"company":"Manage","logo":"../../images/fem/fem-int-job-listing/manage.svg","new":true,"featured":true,"position":"Fullstack Developer","role":"Fullstack","level":"Midweight","postedAt":"1d ago","contract":"Part Time","location":"Remote","languages":["Python"],"tools":["React"]},{"id":3,"company":"Account","logo":"../../images/fem/fem-int-job-listing/account.svg","new":true,"featured":false,"position":"Junior Frontend Developer","role":"Frontend","level":"Junior","postedAt":"2d ago","contract":"Part Time","location":"USA Only","languages":["JavaScript"],"tools":["React","Sass"]},{"id":4,"company":"MyHome","logo":"../../images/fem/fem-int-job-listing/myhome.svg","new":false,"featured":false,"position":"Junior Frontend Developer","role":"Frontend","level":"Junior","postedAt":"5d ago","contract":"Contract","location":"USA Only","languages":["CSS","JavaScript"],"tools":[]},{"id":5,"company":"Loop Studios","logo":"../../images/fem/fem-int-job-listing/loop-studios.svg","new":false,"featured":false,"position":"Software Engineer","role":"Fullstack","level":"Midweight","postedAt":"1w ago","contract":"Full Time","location":"Worldwide","languages":["JavaScript"],"tools":["Ruby","Sass"]},{"id":6,"company":"FaceIt","logo":"../../images/fem/fem-int-job-listing/faceit.svg","new":false,"featured":false,"position":"Junior Backend Developer","role":"Backend","level":"Junior","postedAt":"2w ago","contract":"Full Time","location":"UK Only","languages":["Ruby"],"tools":["RoR"]},{"id":7,"company":"Shortly","logo":"../../images/fem/fem-int-job-listing/shortly.svg","new":false,"featured":false,"position":"Junior Developer","role":"Frontend","level":"Junior","postedAt":"2w ago","contract":"Full Time","location":"Worldwide","languages":["HTML","JavaScript"],"tools":["Sass"]},{"id":8,"company":"Insure","logo":"../../images/fem/fem-int-job-listing/insure.svg","new":false,"featured":false,"position":"Junior Frontend Developer","role":"Frontend","level":"Junior","postedAt":"2w ago","contract":"Full Time","location":"USA Only","languages":["JavaScript"],"tools":["Vue","Sass"]},{"id":9,"company":"Eyecam Co.","logo":"../../images/fem/fem-int-job-listing/eyecam-co.svg","new":false,"featured":false,"position":"Full Stack Engineer","role":"Fullstack","level":"Midweight","postedAt":"3w ago","contract":"Full Time","location":"Worldwide","languages":["JavaScript","Python"],"tools":["Django"]},{"id":10,"company":"The Air Filter Company","logo":"../../images/fem/fem-int-job-listing/the-air-filter-company.svg","new":false,"featured":false,"position":"Front-end Dev","role":"Frontend","level":"Junior","postedAt":"1mo ago","contract":"Part Time","location":"Worldwide","languages":["JavaScript"],"tools":["React","Sass"]}]');n.p,n.p,n.p,n.p,n.p,n.p,n.p,n.p,n.p,n.p,n.p,document.addEventListener("DOMContentLoaded",(function(){var e=o(".job-list-container");r.forEach((function(t){var n=i("div");n.classList.add("job-list","mx-auto","bg-white","c-shadow","flex","flex-col","sm:flex-row","item-center","justify-between","relative","mb-8","p-4","".concat(t.featured?"featured":"non-featured"));var o="".concat(t.role," ").concat(t.level," ").concat(t.languages.join(" ")," ").concat(t.tools.join(" "));n.setAttribute("data-categories",o),n.innerHTML='\n            <span class="absolute -top-4 opacity-0">'.concat(t.id,'</span>\n             \n            <div class="flex items-center justify-start -translate-y-1/2 sm:translate-y-0"><img src="').concat(t.logo,'" /></div>\n\n            <div class="ml-4 mr-auto font-bold text-left my-2">\n                <div class="flex flex-nowrap items-center justify-start gap-1">\n                    <span class="text-[hsl(180,_8%,_52%)]">').concat(t.company,'</span>\n                    <span class="bg-[hsl(180,_8%,_52%)] ').concat(t.featured?"":"hidden",' py-1 px-2 rounded-xl text-white text-sm">').concat(t.new?"NEW!":"",'</span>\n\n                    <span class="bg-[hsl(180,_14%,_20%)] ').concat(t.featured?"":"hidden",' py-1 px-2 rounded-xl text-white text-sm">').concat(t.featured?"FEATURED":"",'</span>\n\n                </div>\n                <div class="text-[hsl(180,_8%,_52%)] text-xl">').concat(t.position,'</div>\n                <div class="text-gray-500 text-sm font-medium">\n                <span class="mr-1">').concat(t.postedAt,'</span>\n                <span class="mr-1">.</span>\n                <span class="mr-1">').concat(t.contract,'</span>\n                <span class="mr-1">.</span>\n                <span class="mr-1">').concat(t.location,'</span>\n                </div>\n            </div>\n\n            <div class="h-line sm:hidden my-4"></div>\n            \n            <div class="flex items-center justify-start flex-wrap font-semibold">\n\n                <span class="filter-item bg-[hsl(180,_52%,_96%)] hover:bg-[hsl(180,_8%,_52%)] mr-2 text-[hsl(180,_8%,_52%)]  cursor-pointer hover:text-white p-2 rounded">').concat(t.role,'</span>\n\n                <span class="filter-item bg-[hsl(180,_52%,_96%)] hover:bg-[hsl(180,_8%,_52%)] mr-2 text-[hsl(180,_8%,_52%)]  cursor-pointer hover:text-white p-2 rounded">').concat(t.level,"</span>\n\n                ").concat(t.languages.map((function(e){return'<span class="filter-item bg-[hsl(180,_52%,_96%)] hover:bg-[hsl(180,_8%,_52%)] text-[hsl(180,_8%,_52%)]  cursor-pointer hover:text-white rounded p-2 mx-2">'.concat(e,"</span>")})).join(" "),"\n\n                ").concat(t.tools.map((function(e){return'<span class="filter-item bg-[hsl(180,_52%,_96%)] hover:bg-[hsl(180,_8%,_52%)] text-[hsl(180,_8%,_52%)]  cursor-pointer hover:text-white rounded p-2 mx-2">'.concat(e,"</span>")})).join(" "),"                \n            </div>\n        "),e.appendChild(n)}));var t=o(".filter-box"),n=a(".filter-item"),s=o(".clear-filter"),l=a(".job-list");function c(e){l.forEach((function(t){var n=t.getAttribute("data-categories").split(" ");e.every((function(e){return n.includes(e)}))?t.classList.remove("hidden"):t.classList.add("hidden")}))}s.addEventListener("click",(function(){t.innerHTML='<span class="clear-filter absolute right-4 top-[40%] font-semibold text-gray-500">Clear</span>',l.forEach((function(e){e.classList.remove("hidden")}))})),n.forEach((function(e){e.addEventListener("click",(function(){var n=e.cloneNode(!0),o=i("span");o.innerHTML='<img class="inline ml-1 filter-cross" src="../../images/fem/fem-int-job-listing/icon-remove.svg" />',n.appendChild(o),t.appendChild(n);var a,r=(a=t.querySelectorAll(".filter-item"),Array.from(a).map((function(e){return e.textContent})));c(r),o.addEventListener("click",(function(){t.removeChild(n),r.splice(r.indexOf(e.textContent),1),c(r)}))}))}))}))}},n={};function o(e){var a=n[e];if(void 0!==a)return a.exports;var i=n[e]={exports:{}};return t[e](i,i.exports,o),i.exports}o.m=t,e=[],o.O=function(t,n,a,i){if(!n){var r=1/0;for(p=0;p<e.length;p++){n=e[p][0],a=e[p][1],i=e[p][2];for(var s=!0,l=0;l<n.length;l++)(!1&i||r>=i)&&Object.keys(o.O).every((function(e){return o.O[e](n[l])}))?n.splice(l--,1):(s=!1,i<r&&(r=i));if(s){e.splice(p--,1);var c=a();void 0!==c&&(t=c)}}return t}i=i||0;for(var p=e.length;p>0&&e[p-1][2]>i;p--)e[p]=e[p-1];e[p]=[n,a,i]},o.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),o.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},function(){var e;o.g.importScripts&&(e=o.g.location+"");var t=o.g.document;if(!e&&t&&(t.currentScript&&(e=t.currentScript.src),!e)){var n=t.getElementsByTagName("script");if(n.length)for(var a=n.length-1;a>-1&&!e;)e=n[a--].src}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),o.p=e+"../../"}(),function(){var e={476:0,79:0};o.O.j=function(t){return 0===e[t]};var t=function(t,n){var a,i,r=n[0],s=n[1],l=n[2],c=0;if(r.some((function(t){return 0!==e[t]}))){for(a in s)o.o(s,a)&&(o.m[a]=s[a]);if(l)var p=l(o)}for(t&&t(n);c<r.length;c++)i=r[c],o.o(e,i)&&e[i]&&e[i][0](),e[i]=0;return o.O(p)},n=self.webpackChunksample_projects=self.webpackChunksample_projects||[];n.forEach(t.bind(null,0)),n.push=t.bind(null,n.push.bind(n))}();var a=o.O(void 0,[79],(function(){return o(669)}));a=o.O(a)}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,